<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1 r1853635">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="L1-iSource-AuctionDefineSettings" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="L1-iSource-AuctionDefineSettings-Job" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(thread,)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(rampup,)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="path" elementType="Argument">
              <stringProp name="Argument.name">path</stringProp>
              <stringProp name="Argument.value">D:\apache-jmeter-5.1\apache-jmeter-5.1\bin\excel\isource\</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Content-Type" elementType="Argument">
              <stringProp name="Argument.name">Content-Type</stringProp>
              <stringProp name="Argument.value">application/x-www-form-urlencoded</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Argument">
              <stringProp name="Argument.name">Accept</stringProp>
              <stringProp name="Argument.value">application/json, text/plain, */*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Content-Type2" elementType="Argument">
              <stringProp name="Argument.name">Content-Type2</stringProp>
              <stringProp name="Argument.value">application/json</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventtype" elementType="Argument">
              <stringProp name="Argument.name">eventtype</stringProp>
              <stringProp name="Argument.value">AUCTION</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="PORT" elementType="Argument">
              <stringProp name="Argument.name">PORT</stringProp>
              <stringProp name="Argument.value">443</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="PROTOCOL" elementType="Argument">
              <stringProp name="Argument.name">PROTOCOL</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pagerec" elementType="Argument">
              <stringProp name="Argument.name">pagerec</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="fileName" elementType="Argument">
              <stringProp name="Argument.name">fileName</stringProp>
              <stringProp name="Argument.value">1310239841_ItemTableTemplate_Section1.0.xlsx</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="filepath" elementType="Argument">
              <stringProp name="Argument.name">filepath</stringProp>
              <stringProp name="Argument.value">D:\apache-jmeter-5.1\apache-jmeter-5.1\bin\excel\isource\</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Origin" elementType="Argument">
              <stringProp name="Argument.name">Origin</stringProp>
              <stringProp name="Argument.value">https://login-rp.zycus.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Origin2" elementType="Argument">
              <stringProp name="Argument.name">Origin2</stringProp>
              <stringProp name="Argument.value">https://dewdrops-isource-partner.zycus.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="BASE_URL_1" elementType="Argument">
              <stringProp name="Argument.name">BASE_URL_1</stringProp>
              <stringProp name="Argument.value">dewdrops-partner.zycus.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="BASE_URL_2" elementType="Argument">
              <stringProp name="Argument.name">BASE_URL_2</stringProp>
              <stringProp name="Argument.value">isource-partner.zycus.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ImportPath" elementType="Argument">
              <stringProp name="Argument.name">ImportPath</stringProp>
              <stringProp name="Argument.value">D:\apache-jmeter-5.1\apache-jmeter-5.1\bin\excel\isource\</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="filenamemb" elementType="Argument">
              <stringProp name="Argument.name">filenamemb</stringProp>
              <stringProp name="Argument.value">100mb.docx</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list"/>
        </AuthManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">${path}Partner_ZCS_Users.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">email,password</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">false</boolProp>
        </CacheManager>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.1# Login_Credential" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.1.1 home/api/u/tms/auth/isLogin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/u/tms/auth/isLogin</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.1.2 home/lmt/translations/DD-Login/en_US.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/lmt/translations/DD-Login/en_US.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.1.3 home/api/u/dd/users/getCSRFToken" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/u/dd/users/getCSRFToken</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2020-01-30T11:22:44.104</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">rxVisitor=1579863345250HU42423E0EHJG0MCCHCE2KHLDCDH51BK; REMEMBER_ME_COOKIE=false; LPVID=YzODgzODJlODdjMjY4MGM2; LPSID-91289041=wBOfdLaLQe-XfgsTTzP0CA; dtPC=1^$492686576_139h-vGNMADUCEABELPIFPKEJMHMEMMOEEBGJX; dtLatC=1; dtSa=true^%^7CC^%^7C-1^%^7CToll^%^20Free^%^20Numbers^%^20^%^28Country^%^20Specific^%^20Numbers^%^29North^%^20America^%^3A^%^20^%^2B1^%^20800-409-3507^%^20^%^5Ep^%^20^%^2B1^%^20866-363-6625Inter...^%^7C-^%^7C1580292698161^%^7C492686576_139^%^7C${PROTOCOL}^%^3A^%^2F^%^2Flogin-sp.zycus.com^%^2Fsso^%^2Flogin^%^7CZycus^%^20^%^3A^%^3A^%^20Login^%^7C1580292695688^%^7C^%^7C; dtCookie=1^$78401E046222CA07B60F7B7B5B5196CF^|ea7c4b59f27d43eb^|1; rxvt=1580294500672^|1580292063694; SERVERID=dew-com-se2.app.inmu.sp.zycus.local_dewdrops-common-services_bk_secondary</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-01-30T11:22:44.107</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.2. Login_Home" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.1 home/api/u/tms/auth/login" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;emailAddress&quot;:&quot;Loadtest110@zycus.com&quot;,&quot;password&quot;:&quot;yAqIrOiUnAtEbIoUeIsEf$77&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/u/tms/auth/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.1 home/api/u/tms/auth/login" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;emailAddress&quot;:&quot;${email}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/u/tms/auth/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.2 home/api/u/tms/auth/isLogin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/u/tms/auth/isLogin</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1692558840">&quot;requestID</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.3 home/api/a/dd/users/getDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/dd/users/getDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">userid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;userId&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">EMPTYUSERID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">tenantId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;tenantId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">EMPTYtenantId</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1867169789">success</stringProp>
                <stringProp name="927084100">&quot;data&quot;:{&quot;userDetails&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.4 home/lmt/translations/DewDrops/en_US.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/lmt/translations/DewDrops/en_US.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-624070464">:&quot;Locale&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.5 eproc/api/a/eproc/users/doValidateUserDefaults" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">eproc/api/a/eproc/users/doValidateUserDefaults</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1173668551">&quot;data&quot;:{&quot;userDefault&quot;:{&quot;tenantId&quot;:</stringProp>
                <stringProp name="1975190256">&quot;status&quot;:&quot;success&quot;,&quot;statusCode&quot;:200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.6 home/api/a/dd/users/getTokenId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/dd/users/getTokenId</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="37087608">requestID&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.7 home/api/a/tms/themes/menus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/tms/themes/menus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="874262715">menuUniqueName</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.8 home/api/a/tms/users/getRoles" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/tms/users/getRoles</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1197754676">{&quot;roles&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.9 home/api/a/tms/users/preferenceData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/tms/users/preferenceData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-981299857">&quot;data&quot;:{&quot;localeMap&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.10 home/api/a/sht/helpcontents/dewdrops/getKeys" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/sht/helpcontents/dewdrops/getKeys</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.11 home/api/a/tms/companies/getLogo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/tms/companies/getLogo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.12 home/api/a/tms/users/getUserImage" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/tms/users/getUserImage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.13 home/api/a/dd/batch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:[{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/tms/approvals/getDetailsByEmail&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/tms/themes/menus&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/dd/headers/getColor&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/tms/users/isCompanyAdmin&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/tms/users/getCompany&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/cns/notifications/getDismissPref&quot;}],&quot;sse&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/dd/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">292</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">requestID</stringProp>
              <stringProp name="RegexExtractor.regex">requestID&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">empty requestID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="37087608">requestID&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.12 home/api/a/dd/headers/allQuickLinks" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/dd/headers/allQuickLinks</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="37087608">requestID&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.14 home/api/a/dd/batch/{requestID}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/dd/batch/${requestID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/event-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="360696736">data: {&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.15 home/api/a/dd/searches/getIntents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;showRecentLinks&quot;:true,&quot;searchTerm&quot;:&quot;&quot;,&quot;isOneViewEnabled&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/dd/searches/getIntents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">65</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2#. Dewdrops_Default_ListingPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.1 isource/api/a/isource/events/updateCertificate" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/updateCertificate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.2 api/a/tms/activities/isource/getActivities" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/tms/activities/isource/getActivities</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1680394576">&quot;data&quot;:{&quot;activities&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.3 lmt/translations/iSource/en_US.json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">lmt/translations/iSource/en_US.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.4 api/a/tms/users/getInstance" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/tms/users/getInstance</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.3 api/a/dd/batch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:[{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/tms/users/isCompanyAdmin&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/tms/users/getCompany&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/cns/notifications/getDismissPref&quot;}],&quot;sse&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/dd/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">292</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">batchId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;requestID&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">batchId null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1944697044">&quot;data&quot;:{&quot;message&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.4 api/a/isource/events/getEventType" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/getEventType</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.5 api/a/isource/events/getEventOwner" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/getEventOwner</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.7 api//a/isource/events/allEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api//a/isource/events/allEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.8 api/a/isource/events/adminSettingFlags" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/adminSettingFlags</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-609823016">&quot;data&quot;:{&quot;responseForBusinessUserAllowed&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.9 api/a/isource/users/getUseriSourceDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/users/getUseriSourceDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="909001157">&quot;data&quot;:{&quot;companyId&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.10 api/a/dd/users/events/getListingColumnPreference" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/dd/users/events/getListingColumnPreference</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.11 api/a/isource/views/list" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;perPageRecords&quot;:50,&quot;pageNo&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/views/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">32</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.12 api/a/sht/helpcontents/isource/getKeys" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/sht/helpcontents/isource/getKeys</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.13 api/a/dd/batch/{batchId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/dd/batch/${batchId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/event-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1693300703">data: {&quot;status&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.14 api/a/isource/events/list" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;criteriaGroup&quot;:{&quot;logicalOperator&quot;:&quot;AND&quot;,&quot;criteria&quot;:[{&quot;fieldName&quot;:&quot;owner&quot;,&quot;value&quot;:&quot;ALL&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:0}]},&quot;pageNo&quot;:1,&quot;perPageRecords&quot;:10}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">170</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.22 api/a/isource/views/3174/getDetails" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/views/3174/getDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="3. create event" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1 api/a/isource/events/templates" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;criteriaGroup&quot;:{&quot;logicalOperator&quot;:&quot;AND&quot;,&quot;criteria&quot;:[{&quot;fieldName&quot;:&quot;type&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;value&quot;:&quot;${eventtype}&quot;}]},&quot;sorts&quot;:[{&quot;fieldName&quot;:&quot;CreatedDate&quot;,&quot;direction&quot;:&quot;DESC&quot;}],&quot;pageNo&quot;:1,&quot;perPageRecords&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/templates</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1 api/a/isource/events/templates" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;criteriaGroup&quot;:{&quot;logicalOperator&quot;:&quot;AND&quot;,&quot;criteria&quot;:[{&quot;fieldName&quot;:&quot;type&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;value&quot;:&quot;${eventtype}&quot;}]},&quot;sorts&quot;:[{&quot;fieldName&quot;:&quot;CreatedDate&quot;,&quot;direction&quot;:&quot;DESC&quot;}],&quot;pageNo&quot;:1,&quot;perPageRecords&quot;:12}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/templates</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2 api/a/isource/events" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;createSourceType&quot;:&quot;SCRATCH&quot;,&quot;sourceDocumentId&quot;:&quot;&quot;,&quot;isTemplateEvent&quot;:false,&quot;eventName&quot;:&quot;RFPEventPublish_${__RandomString(5,abcdghijklmnopqrstuvwxyz34567890ef12,)}&quot;,&quot;eventDesc&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;${eventtype}&quot;,&quot;auctionType&quot;:&quot;ENGLISH&quot;,&quot;auctionSubType&quot;:&quot;REVERSE&quot;,&quot;isPublicEvent&quot;:false,&quot;isTestEvent&quot;:false,&quot;isTwoEnvelopeBidding&quot;:false,&quot;opportunityInfo&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">eventId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">EMPTYEVENTID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(eventId, ${eventId})};</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.3 api/a/isource/events/eventid/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1204524299">&quot;data&quot;:{&quot;status&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.4 api/a/tms/users/getRoles" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/tms/users/getRoles</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1877139965">&quot;data&quot;:[{&quot;activities&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.5 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ename</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">event name null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">customid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;customFieldId&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">custom id null</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">selectid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">selectid null</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">eventID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uiId&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">uId empty</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">log.info(vars.get(&quot;email&quot;) + &quot;,&quot; + vars.get(&quot;uId&quot;) + &quot;,&quot; + vars.get(&quot;ename&quot;));</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(eventID, ${eventID})};</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.6 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.7 api/a/isource/events/eventid" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.8 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.9 api/a/isource/events/{eventId}/eventTimerInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/eventTimerInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-832616956">&quot;data&quot;:{&quot;documentSubStatus&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.10 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.11 api/a/isource/events/{eventId}/opportunityDetails" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/opportunityDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.12 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.13 api/a/isource/auctions/{eventId}/bidRecoDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/auctions/${eventId}/bidRecoDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-473517031">&quot;data&quot;:{&quot;documentId&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.14 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.15 api/a/isource/users/getUseriSourceDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/users/getUseriSourceDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="999153941">&quot;data&quot;:{&quot;companyId&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.16 api/a/isource/attachments/getALL" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;attachmentType&quot;:&quot;DOC&quot;,&quot;isPermanentUpload&quot;:&quot;true&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/getALL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="972518731">&quot;data&quot;:{&quot;records&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.17 api/a/isource/attachments/getALL" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;attachmentType&quot;:&quot;TNC&quot;,&quot;isPermanentUpload&quot;:&quot;true&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/getALL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">attachid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?)}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">attachid not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="972518731">&quot;data&quot;:{&quot;records&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.18 api/a/isource/events/{eventid}/sections/getAllSections" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/getAllSections</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1575278328">&quot;data&quot;:{&quot;section&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.19 api/a/lmt/locale/ISOURCE/en_US/getLocale" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/lmt/locale/ISOURCE/en_US/getLocale</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.20 api/a/sht/helpcontents/isource_eventdetails/getAllKeys" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/sht/helpcontents/isource_eventdetails/getAllKeys</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.21 api/a/isource/events/{eventid}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.22 api/a/isource/attachments/{attachid}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/${attahid}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-570718727">&quot;data&quot;:{&quot;attachmentId&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.23 api/a/isource/events/{eventId}/PUBLISH/flexiFormInformation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/PUBLISH/flexiFormInformation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="583285692">&quot;data&quot;:{&quot;flexiFormEventInstance&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">eformId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;eFormDefinitionId&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">eformId EMPTY</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.24 api/a/eform/dynamicforms/getInstance" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;formId&quot;:&quot;${eformId}&quot;,&quot;instanceId&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/eform/dynamicforms/getInstance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">65</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.25 api/a/isource/scoreSheets/{eventId}/getAll" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/scoreSheets/${eventId}/getAll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1068747478">&quot;data&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="3#. Create_Event_button_Click" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1 api/a/isource/events/checkSimIntegration" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/checkSimIntegration</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="3.1#. Create_Event_button_Click" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.1 api/a/isource/events/templates" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;criteriaGroup&quot;:{&quot;logicalOperator&quot;:&quot;AND&quot;,&quot;criteria&quot;:[{&quot;fieldName&quot;:&quot;type&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;value&quot;:&quot;Auction&quot;},{&quot;fieldName&quot;:&quot;auctionType&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;value&quot;:&quot;ENGLISH&quot;}]},&quot;sorts&quot;:[{&quot;fieldName&quot;:&quot;CreatedDate&quot;,&quot;direction&quot;:&quot;DESC&quot;}],&quot;pageNo&quot;:1,&quot;perPageRecords&quot;:12}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/templates</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="3.2#.  Create_Event_finalClick" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.1 api/a/isource/events" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;createSourceType&quot;:&quot;SCRATCH&quot;,&quot;sourceDocumentId&quot;:&quot;&quot;,&quot;isTemplateEvent&quot;:false,&quot;eventName&quot;:&quot;Auction_${__RandomString(5,abef3456789012,)}&quot;,&quot;eventDesc&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;${eventtype}&quot;,&quot;auctionType&quot;:&quot;ENGLISH&quot;,&quot;auctionSubType&quot;:&quot;REVERSE&quot;,&quot;isPublicEvent&quot;:false,&quot;isTestEvent&quot;:false,&quot;isTwoEnvelopeBidding&quot;:false,&quot;opportunityInfo&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">2285</stringProp>
            </ConstantTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">eventId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">EMPTYEVENTID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(eventId, ${eventId})};</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.3 home/api/a/dd/users/getDetails" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/dd/users/getDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">userid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;userId&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">EMPTYUSERID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">tenantId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;tenantId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">EMPTYtenantId</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1417951688">&quot;data&quot;:{&quot;userDetails&quot;:{&quot;firstName&quot;:</stringProp>
                <stringProp name="-1867169789">success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.2 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1204524299">&quot;data&quot;:{&quot;status&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.3 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="authority" elementType="Header">
                  <stringProp name="Header.name">authority</stringProp>
                  <stringProp name="Header.value">partner-zcsauth.zycus.com</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">_fw_crm_v=26f86bd4-5be8-4ae4-d4be-1876d3e17c99; dtCookie=v_4_srv_1_sn_6C15E6D036DDC0E1E5E43B38B15B1A73_perc_100000_ol_0_mul_1; rxVisitor=16044602140906H9DPK44E0TH0K402A5IAHTQQQ193JND; SRVID=98abdc5d78b0416d; logoutURL=https%3A%2F%2Fzauth-partner.zycus.com%2Fsession%2Flogout; SAAS_COMMON_BASE_TOKEN_ID=6523c5ff-241f-4402-98dc-55a3770064b7; dtSa=-; dtLatC=1; rxvt=1604472927570|1604469207660; dtPC=1$70856418_961h67vUKCPACFSBDKUVIKAGNPBUAUDUDBSRAAL-0e23</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://partner-zcsauth.zycus.com/isource/</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ename</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">event name null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">customid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;customFieldId&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">custom id null</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">selectid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">selectid null</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">eventID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uiId&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">uId empty</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(eventID, ${eventID})};</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(eventId, ${eventId})};</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.4 api/a/isource/events/{eventId}/eventTimerInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/eventTimerInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-832616956">&quot;data&quot;:{&quot;documentSubStatus&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.5 api/a/isource/quickSources/entitlementSettings" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/quickSources/entitlementSettings</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1615186397">data&quot;:{&quot;isTnCPresent&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.6 api/a/isource/events/{eventId}/PUBLISH/flexiFormInformation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/PUBLISH/flexiFormInformation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/isource/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">rxVisitor=1579844856226M28GKL2CHTPH3I9JJVS4RQR3IENGEGH1; LPVID=diMmE2MTczOGI4MThjYmFi; REMEMBER_ME_COOKIE=false; LPSID-91289041=t1wKap9gSk-4o6BPUvXLtg; dtSa=-; dtLatC=1; dtPC=1$323490883_724h-vJMJJCLFGJFJOKNDRAOLGJJNLOIFAKKJH; dtCookie=1$89195971A0DE8D6A0A94FA8FEB452BF5|ea7c4b59f27d43eb|1; rxvt=1580725574262|1580722705534; SAAS_COMMON_BASE_TOKEN_ID=ddb909d3-5c8e-493a-973e-567e3a8b4775; SERVERID=dew-com-se1.app.inmu.sp.zycus.local_dewdrops-common-services_bk</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="583285692">&quot;data&quot;:{&quot;flexiFormEventInstance&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">eFormId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;eFormDefinitionId&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">eFormId EMPTY</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.7 api/a/isource/events/{eventId}/opportunityDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/opportunityDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.8 api/a/isource/auctions/{eventId}/bidRecoDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/auctions/${eventId}/bidRecoDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-473517031">&quot;data&quot;:{&quot;documentId&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.9 api/a/isource/events/adminSettingFlags" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/adminSettingFlags</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-609823016">&quot;data&quot;:{&quot;responseForBusinessUserAllowed&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.10 api/a/isource/events/checkSimIntegration" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/checkSimIntegration</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.11 api/a/isource/attachments/getALL" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;attachmentType&quot;:&quot;DOC&quot;,&quot;isPermanentUpload&quot;:&quot;true&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/getALL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">9</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="972518731">&quot;data&quot;:{&quot;records&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.12 api/a/isource/attachments/getALL" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;attachmentType&quot;:&quot;TNC&quot;,&quot;isPermanentUpload&quot;:&quot;true&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/getALL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">4</stringProp>
            </ConstantTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">attachid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?)}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">attachid not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="972518731">&quot;data&quot;:{&quot;records&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.13 api/a/isource/events/{eventId}/sections/questionCountDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/questionCountDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.13 api/a/sht/helpcontents/isource_eventdetails/getAllKeys" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/sht/helpcontents/isource_eventdetails/getAllKeys</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.13 api/a/isource/attachments/{attachid}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/${attachid}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-570718727">&quot;data&quot;:{&quot;attachmentId&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.15 api/a/eform/dynamicforms/getInstance" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;formId&quot;:&quot;${eFormId}&quot;,&quot;instanceId&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/eform/dynamicforms/getInstance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">65</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/isource/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">rxVisitor=15858027152402I8PRJRL1R7OG2O132G830HHECNTNF5I; dtSa=-; REMEMBER_ME_COOKIE=false; SAAS_COMMON_BASE_TOKEN_ID=4d9058ec-ff75-419d-a3cf-928458baf5ef; SERVERID=dew-com-se1.app.inmu.sp.zycus.local_dewdrops-common-services_bk; dtLatC=9; dtCookie=v_4_srv_1_sn_373FE01D43C5EED8AD6FF0D68FBAA3D3_perc_100000_ol_0_mul_1_app-3Aea7c4b59f27d43eb_1; dtPC=1$2906539_96h-vCCLLVAFLFGMMKMJAMUGKJBJBBJLMRGUD-0; rxvt=1585806515805|1585804715805</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1546095592">&quot;data&quot;:{&quot;instance&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.16 api/a/eform/rules/getRules" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;selectedField&quot;: &quot;&quot;,&#xd;
    &quot;advisorRule&quot;: &quot;NONE&quot;,&#xd;
    &quot;fields&quot;: {&#xd;
      &quot;custom fields.pr value&quot;: {&#xd;
        &quot;name&quot;: &quot;custom fields.pr value&quot;,&#xd;
        &quot;editable&quot;: true,&#xd;
        &quot;mandatory&quot;: false,&#xd;
        &quot;show&quot;: true,&#xd;
        &quot;visible&quot;: true,&#xd;
        &quot;value&quot;: &quot;&quot;,&#xd;
        &quot;searchCriteria&quot;: {&#xd;
          &quot;startIndex&quot;: 0,&#xd;
          &quot;endIndex&quot;: 10,&#xd;
          &quot;logicalOperator&quot;: &quot;OR&quot;,&#xd;
          &quot;searchClause&quot;: &quot;CONTAINS&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;custom fields.function&quot;: {&#xd;
        &quot;name&quot;: &quot;custom fields.function&quot;,&#xd;
        &quot;editable&quot;: true,&#xd;
        &quot;mandatory&quot;: false,&#xd;
        &quot;show&quot;: true,&#xd;
        &quot;visible&quot;: true,&#xd;
        &quot;value&quot;: &quot;&quot;,&#xd;
        &quot;searchCriteria&quot;: {&#xd;
          &quot;startIndex&quot;: 0,&#xd;
          &quot;endIndex&quot;: 10,&#xd;
          &quot;logicalOperator&quot;: &quot;OR&quot;,&#xd;
          &quot;searchClause&quot;: &quot;CONTAINS&quot;&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/eform/rules/getRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="4#. Create_Questionnaire" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.1 api/a/isource/events/false/saveDraft" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;basicDetails&quot;: {&#xd;
    &quot;eventDesc&quot;: &quot;null&quot;,&#xd;
    &quot;eventId&quot;: ${eventId},&#xd;
    &quot;eventName&quot;: &quot;${ename}&quot;,&#xd;
    &quot;isPublicEvent&quot;: false,&#xd;
    &quot;isTebEvent&quot;: false,&#xd;
    &quot;isTestEvent&quot;: 0&#xd;
  },&#xd;
  &quot;elmdFieldsRequest&quot;: {&#xd;
    &quot;doSave&quot;: &quot;no&quot;,&#xd;
    &quot;documentId&quot;: ${eventId},&#xd;
    &quot;isSelectedCF&quot;: &quot;Cf&quot;,&#xd;
    &quot;saveSelectedAction&quot;: &quot;doSave&quot;,&#xd;
    &quot;elmdFieldsToUpdate&quot;: []&#xd;
  },&#xd;
  &quot;flexiFormRequest&quot;: {&#xd;
    &quot;documentId&quot;: ${eventId},&#xd;
    &quot;documentSubType&quot;: &quot;PUBLISH&quot;,&#xd;
    &quot;flexiFormInstance&quot;: {}&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/false/saveDraft</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1166459812">&quot;data&quot;:{&quot;id&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.1 api/a/isource/events/saveDraft" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;basicDetails&quot;:{&quot;eventDesc&quot;:null,&quot;eventId&quot;:${eventId},&quot;eventName&quot;:&quot;${ename}&quot;,&quot;isPublicEvent&quot;:false,&quot;isTebEvent&quot;:false,&quot;isTestEvent&quot;:0},&quot;elmdFieldsRequest&quot;:{&quot;doSave&quot;:&quot;no&quot;,&quot;documentId&quot;:${eventId},&quot;isSelectedCF&quot;:&quot;Cf&quot;,&quot;saveSelectedAction&quot;:&quot;doSave&quot;,&quot;elmdFieldsToUpdate&quot;:[{&quot;customFieldId&quot;:&quot;${customid_1}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_2}&quot;}]},&quot;flexiFormRequest&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/saveDraft</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1166459812">&quot;data&quot;:{&quot;id&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.2 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.3 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1166459812">&quot;data&quot;:{&quot;id&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.4 api/a/isource/events/{eventId}/sections/getAllSections" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/getAllSections</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1575278328">&quot;data&quot;:{&quot;section&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5#. Add_Section_1" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1 api/a/isource/events/{eventId}/sections" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meta&quot;: {&#xd;
    &quot;relation&quot;: &quot;OBJECT&quot;,&#xd;
    &quot;eventId&quot;: ${eventId}&#xd;
  },&#xd;
  &quot;status&quot;: &quot;DEFAULT&quot;,&#xd;
  &quot;name&quot;: &quot;section${__counter(TRUE,)}LotItem5Sections2Keach&quot;,&#xd;
  &quot;type&quot;: &quot;NON_PRICING&quot;,&#xd;
  &quot;sequence&quot;: 1,&#xd;
  &quot;state&quot;: &quot;DEFINE&quot;,&#xd;
  &quot;lineItemBidding&quot;: 0,&#xd;
  &quot;isFromMultiRound&quot;: true,&#xd;
  &quot;isToDeleteFlexiItemTblMapping&quot;: true,&#xd;
  &quot;questions&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">267</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sectionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">sectionId EMPTY</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1 api/a/isource/events/{eventId}/sections" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;meta&quot;:{&quot;relation&quot;:&quot;OBJECT&quot;,&quot;eventId&quot;:${eventId}},&quot;status&quot;:&quot;DEFAULT&quot;,&quot;name&quot;:&quot;section${__counter(TRUE,)}LotItem5Sections2Keach&quot;,&quot;type&quot;:&quot;NON_PRICING&quot;,&quot;sequence&quot;:1,&quot;state&quot;:&quot;DEFINE&quot;,&quot;lineItemBidding&quot;:0,&quot;isFromMultiRound&quot;:true,&quot;isToDeleteFlexiItemTblMapping&quot;:true,&quot;questions&quot;:null,&quot;envelopeType&quot;:&quot;Technical&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">267</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sectionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">sectionId EMPTY</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2 api/a/isource/events/{eventId}/sections/{sectionId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${sectionId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">343</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="694109960">&quot;data&quot;:{&quot;meta&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2 api/a/isource/events/{eventId}/sections/{sectionId}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;status&quot;: &quot;DEFAULT&quot;,&#xd;
  &quot;name&quot;: &quot;Section&quot;,&#xd;
  &quot;type&quot;: &quot;NON_PRICING&quot;,&#xd;
  &quot;sequence&quot;: 1,&#xd;
  &quot;state&quot;: &quot;POSTED&quot;,&#xd;
  &quot;relation&quot;: &quot;OBJECT&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${sectionId}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">343</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2 api/a/isource/events/{eventId}/sections/{secid}/question" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;meta&quot;:{&quot;relation&quot;:&quot;OBJECT&quot;,&quot;eventId&quot;:${eventId},&quot;sectionId&quot;:${secid}},&quot;text&quot;:&quot;&lt;p&gt;Enter question&lt;/p&gt;&quot;,&quot;sequence&quot;:1,&quot;properties&quot;:{&quot;isMandatory&quot;:false,&quot;isHidden&quot;:false,&quot;isSupplierCommentDisable&quot;:true},&quot;isFromIntegration&quot;:false,&quot;isFromMultiRound&quot;:false,&quot;isResponseToBeDiscard&quot;:false,&quot;status&quot;:&quot;DEFAULT&quot;,&quot;type&quot;:&quot;TEXT&quot;,&quot;settings&quot;:{&quot;maxTextLength&quot;:2000}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${secid}/question</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">343</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5.1# Import_Button" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.1 api/a/isource/events/{eventId}/sections/{sectionId}/question" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meta&quot;: {&#xd;
    &quot;eventId&quot;: ${eventId},&#xd;
    &quot;sectionId&quot;: ${sectionId}&#xd;
  },&#xd;
  &quot;properties&quot;: {&#xd;
    &quot;isHidden&quot;: false,&#xd;
    &quot;isMandatory&quot;: true,&#xd;
    &quot;isSupplierCommentDisable&quot;: true&#xd;
  },&#xd;
  &quot;sequence&quot;: 2,&#xd;
  &quot;settings&quot;: {&#xd;
    &quot;isNoBidAllowed&quot;: false,&#xd;
    &quot;isTotalCostBidding&quot;: false,&#xd;
    &quot;totalCost&quot;: {&#xd;
      &quot;displayName&quot;: &quot;DEFAULT&quot;,&#xd;
      &quot;value&quot;: null,&#xd;
      &quot;sequence&quot;: 1,&#xd;
      &quot;isHidden&quot;: false,&#xd;
      &quot;refId&quot;: null,&#xd;
      &quot;displayFormulaText&quot;: &quot;DEFAULT&quot;,&#xd;
      &quot;formulaString&quot;: &quot;*&quot;,&#xd;
      &quot;isFormulaStringHidden&quot;: true&#xd;
    },&#xd;
    &quot;partialBid&quot;: null,&#xd;
    &quot;isLineItemBidding&quot;: null,&#xd;
    &quot;rows&quot;: [&#xd;
      {}&#xd;
    ],&#xd;
    &quot;pricingInformation&quot;: {&#xd;
      &quot;unitCosts&quot;: {&#xd;
        &quot;unitCost&quot;: [&#xd;
          {&#xd;
            &quot;displayName&quot;: &quot;DEFAULT&quot;,&#xd;
            &quot;sequence&quot;: 12,&#xd;
            &quot;isHidden&quot;: false&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    },&#xd;
    &quot;items&quot;: {&#xd;
      &quot;item&quot;: [&#xd;
        {&#xd;
          &quot;number&quot;: &quot;1&quot;,&#xd;
          &quot;title&quot;: &quot;DEFAULT&quot;,&#xd;
          &quot;description&quot;: &quot;DEFAULT&quot;,&#xd;
          &quot;baselineCost&quot;: {},&#xd;
          &quot;sequence&quot;: 1,&#xd;
          &quot;segmentationGroup&quot;: null,&#xd;
          &quot;demandInformation&quot;: {&#xd;
            &quot;priceType&quot;: &quot;BULK&quot;,&#xd;
            &quot;estQty&quot;: {&#xd;
              &quot;refId&quot;: &quot;Est Qty&quot;,&#xd;
              &quot;value&quot;: 1&#xd;
            },&#xd;
            &quot;qty&quot;: {&#xd;
              &quot;refId&quot;: &quot;Qty&quot;,&#xd;
              &quot;value&quot;: 1&#xd;
            },&#xd;
            &quot;uom&quot;: &quot;UOM&quot;&#xd;
          },&#xd;
          &quot;itemSpecifications&quot;: null,&#xd;
          &quot;customColumns&quot;: null,&#xd;
          &quot;nonPricingDecisionFactors&quot;: null&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;status&quot;: &quot;DEFAULT&quot;,&#xd;
  &quot;text&quot;: &quot;&lt;p&gt;Enter question&lt;/p&gt;&quot;,&#xd;
  &quot;type&quot;: &quot;ITEMLIST&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${sectionId}/question</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">946</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">questionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">questionId empty</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.2 api/a/isource/events/{questionId}/10/1/lotQuestionDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${questionId}/10/1/lotQuestionDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="694109960">&quot;data&quot;:{&quot;meta&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.3 api/a/isource/events/itemMasterStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/itemMasterStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1204524299">&quot;data&quot;:{&quot;status&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.4 api/a/tms/users/getPreference" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/tms/users/getPreference</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.5 api/a/isource/events/getAllItemMaster" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;perPageRecords&quot;:10,&quot;pageNo&quot;:1,&quot;criteriaGroup&quot;:{&quot;logicalOperator&quot;:&quot;OR&quot;,&quot;criteria&quot;:[{&quot;fieldName&quot;:&quot;elementid&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;value&quot;:&quot;${sectionId}&quot;},{&quot;fieldName&quot;:&quot;eventcurrency&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;value&quot;:&quot;USD&quot;}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/getAllItemMaster</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">217</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5.2#. Create_Import_Table" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2.1 api/a/isource/attachments/importItemTable" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="${filepath}buyer_5_items.xlsx" elementType="HTTPFileArg">
                  <stringProp name="File.path">${filepath}buyer_5_items.xlsx</stringProp>
                  <stringProp name="File.paramname">filename</stringProp>
                  <stringProp name="File.mimetype">application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="eventId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${eventId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">eventId</stringProp>
                </elementProp>
                <elementProp name="buyerRequest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">buyerRequest</stringProp>
                </elementProp>
                <elementProp name="decimalPrecision" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">decimalPrecision</stringProp>
                </elementProp>
                <elementProp name="eventPaused" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">eventPaused</stringProp>
                </elementProp>
                <elementProp name="flexiItemTbl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">flexiItemTbl</stringProp>
                </elementProp>
                <elementProp name="multiRound" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">multiRound</stringProp>
                </elementProp>
                <elementProp name="requestForHiddenResponses" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">requestForHiddenResponses</stringProp>
                </elementProp>
                <elementProp name="supplierPreview" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">supplierPreview</stringProp>
                </elementProp>
                <elementProp name="questionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${questionId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">questionId</stringProp>
                </elementProp>
                <elementProp name="sectionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${sectionId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sectionId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/importItemTable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">95401</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="module" elementType="Header">
                  <stringProp name="Header.name">module</stringProp>
                  <stringProp name="Header.value">itemtable</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2.2 api/a/isource/events/{questionId}/10/1/lotQuestionDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${questionId}/10/1/lotQuestionDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="694109960">&quot;data&quot;:{&quot;meta&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5.3#. Define_Settings" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.3.1 api/a/isource/auctions/{eventId}/{sectionId}/japaneseAuctionSettings" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/auctions/${eventId}/${sectionId}/japaneseAuctionSettings</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">95401</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="module" elementType="Header">
                  <stringProp name="Header.name">module</stringProp>
                  <stringProp name="Header.value">itemtable</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="26815152">&quot;data&quot;:{&quot;decimalPrecision&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.3.2 api/a/isource/auctions/{eventId}/englishSaveDefineSettings" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;sectionId&quot;: ${sectionId},&#xd;
  &quot;startingBid&quot;: 5000,&#xd;
  &quot;minimumBidDecrement&quot;: 2000,&#xd;
  &quot;minimumAboveLowBid&quot;: null,&#xd;
  &quot;minimumBelowLowBid&quot;: null,&#xd;
  &quot;hasBlockBidOver&quot;: false,&#xd;
  &quot;hasBlockBidUnder&quot;: false,&#xd;
  &quot;tiePreventionType&quot;: &quot;CURRENCY&quot;,&#xd;
  &quot;bidDecrementType&quot;: &quot;CURRENCY&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/auctions/${eventId}/englishSaveDefineSettings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">231</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="origin" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://dewdrops-rp.zycus.com</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://dewdrops-rp.zycus.com/isource/</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">231</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5.3#.Add_Section_2" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.3.1 api/a/isource/events/{eventId}/sections" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meta&quot;: {&#xd;
    &quot;relation&quot;: &quot;OBJECT&quot;,&#xd;
    &quot;eventId&quot;: ${eventId}&#xd;
  },&#xd;
  &quot;status&quot;: &quot;DEFAULT&quot;,&#xd;
  &quot;name&quot;: &quot;Section 2&quot;,&#xd;
  &quot;type&quot;: &quot;NON_PRICING&quot;,&#xd;
  &quot;sequence&quot;: 1,&#xd;
  &quot;state&quot;: &quot;DEFINE&quot;,&#xd;
  &quot;lineItemBidding&quot;: 0,&#xd;
  &quot;isFromMultiRound&quot;: true,&#xd;
  &quot;isToDeleteFlexiItemTblMapping&quot;: true,&#xd;
  &quot;questions&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">267</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">secid_2</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">secid EMPTY</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.3.2 api/a/isource/events/{eventId}/sections/{secid_2}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${secid_2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">343</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="694109960">&quot;data&quot;:{&quot;meta&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.3.2 api/a/isource/events/{eventId}/sections/{secid_2}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;status&quot;: &quot;DEFAULT&quot;,&#xd;
  &quot;name&quot;: &quot;Section 2&quot;,&#xd;
  &quot;type&quot;: &quot;NON_PRICING&quot;,&#xd;
  &quot;sequence&quot;: 1,&#xd;
  &quot;state&quot;: &quot;POSTED&quot;,&#xd;
  &quot;relation&quot;: &quot;OBJECT&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${secid_2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">343</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2 api/a/isource/events/{eventId}/sections/{secid}/question" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;meta&quot;:{&quot;relation&quot;:&quot;OBJECT&quot;,&quot;eventId&quot;:${eventId},&quot;sectionId&quot;:${secid}},&quot;text&quot;:&quot;&lt;p&gt;Enter question&lt;/p&gt;&quot;,&quot;sequence&quot;:1,&quot;properties&quot;:{&quot;isMandatory&quot;:false,&quot;isHidden&quot;:false,&quot;isSupplierCommentDisable&quot;:true},&quot;isFromIntegration&quot;:false,&quot;isFromMultiRound&quot;:false,&quot;isResponseToBeDiscard&quot;:false,&quot;status&quot;:&quot;DEFAULT&quot;,&quot;type&quot;:&quot;TEXT&quot;,&quot;settings&quot;:{&quot;maxTextLength&quot;:2000}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${secid}/question</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">343</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="5.6# Questions_Text" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.6.1 api/a/isource/events/{eventId}/sections/{secid}/question" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;meta&quot;:{&quot;relation&quot;:&quot;OBJECT&quot;,&quot;eventId&quot;:${eventId},&quot;sectionId&quot;:${secid_2}},&quot;text&quot;:&quot;what is your name?&quot;,&quot;htmlText&quot;:&quot;&lt;p&gt;Enter Question&lt;/p&gt;&quot;,&quot;sequence&quot;:${__counter(TRUE,)},&quot;properties&quot;:{&quot;isMandatory&quot;:false,&quot;isHidden&quot;:false,&quot;isSupplierCommentDisable&quot;:false},&quot;isFromIntegration&quot;:false,&quot;isFromMultiRound&quot;:false,&quot;isResponseToBeDiscard&quot;:false,&quot;status&quot;:&quot;DEFAULT&quot;,&quot;type&quot;:&quot;TEXT&quot;,&quot;settings&quot;:{&quot;maxTextLength&quot;:2000}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${secid_2}/question</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="630930583">&quot;status&quot;:&quot;success&quot;,</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="6#. Done_Button" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.1 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">_fw_crm_v=26f86bd4-5be8-4ae4-d4be-1876d3e17c99; SRVID=98abdc5d78b0416d; dtCookie=v_4_srv_1_sn_B2D18CCB803471CE528BDFFC100726AE_perc_100000_ol_0_mul_1; rxVisitor=16032613970987O70TN52BO2JF68AREATRVISF2BNTUAP; SAAS_COMMON_BASE_TOKEN_ID=19586ec7-3711-4528-a36f-a3ca6414118c; dtSa=-; dtLatC=1; rxvt=1603275931448|1603273793019; dtPC=1$74117531_552h56vLHFHNOHGIWVEWBBLKBRCBPBJDOQEQPAT-0e2</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://partner-zcsauth.zycus.com/isource/</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.2 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="authority" elementType="Header">
                  <stringProp name="Header.name">authority</stringProp>
                  <stringProp name="Header.value">partner-zcsauth.zycus.com</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">_fw_crm_v=26f86bd4-5be8-4ae4-d4be-1876d3e17c99; dtCookie=v_4_srv_1_sn_6C15E6D036DDC0E1E5E43B38B15B1A73_perc_100000_ol_0_mul_1; rxVisitor=16044602140906H9DPK44E0TH0K402A5IAHTQQQ193JND; SRVID=98abdc5d78b0416d; logoutURL=https%3A%2F%2Fzauth-partner.zycus.com%2Fsession%2Flogout; SAAS_COMMON_BASE_TOKEN_ID=6523c5ff-241f-4402-98dc-55a3770064b7; dtSa=-; dtLatC=1; rxvt=1604472927570|1604469207660; dtPC=1$70856418_961h67vUKCPACFSBDKUVIKAGNPBUAUDUDBSRAAL-0e23</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://partner-zcsauth.zycus.com/isource/</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.3 api/a/isource/events/{eventId}/sections/{secid}/question/{questionId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${sectionId}/question/${questionId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="694109960">&quot;data&quot;:{&quot;meta&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.4 api/a/isource/quickSources/entitlementSettings" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/quickSources/entitlementSettings</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1615186397">data&quot;:{&quot;isTnCPresent&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.5 api/a/isource/events/{eventId}/PUBLISH/flexiFormInformation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/PUBLISH/flexiFormInformation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="583285692">&quot;data&quot;:{&quot;flexiFormEventInstance&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.6 api/a/isource/events/{eventId}/opportunityDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/opportunityDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.7 api/a/isource/auctions/{eventId}/bidRecoDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/auctions/${eventId}/bidRecoDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-473517031">&quot;data&quot;:{&quot;documentId&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.8 api/a/isource/events/adminSettingFlags" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/adminSettingFlags</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-609823016">&quot;data&quot;:{&quot;responseForBusinessUserAllowed&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.9 api/a/isource/events/checkSimIntegration" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/checkSimIntegration</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.10 api/a/isource/users/getUseriSourceDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/users/getUseriSourceDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="909001157">&quot;data&quot;:{&quot;companyId&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.11 api/a/isource/attachments/getALL" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;attachmentType&quot;:&quot;DOC&quot;,&quot;isPermanentUpload&quot;:&quot;true&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/getALL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">9</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="972518731">&quot;data&quot;:{&quot;records&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.12 api/a/isource/attachments/getALL" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;attachmentType&quot;:&quot;TNC&quot;,&quot;isPermanentUpload&quot;:&quot;true&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/getALL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">4</stringProp>
            </ConstantTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">attachid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?)}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">attachid not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="972518731">&quot;data&quot;:{&quot;records&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.13 api/a/isource/events/{eventId}/sections/questionCountDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/questionCountDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.14 api/a/isource/events/{eventId}/sections/{sectionId}/question" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;meta&quot;: {&#xd;
      &quot;relation&quot;: &quot;OBJECT&quot;,&#xd;
      &quot;eventId&quot;: ${eventId},&#xd;
      &quot;sectionId&quot;: ${sectionId}&#xd;
    },&#xd;
    &quot;id&quot;: &quot;342131752&quot;,&#xd;
    &quot;type&quot;: &quot;ITEMLIST&quot;,&#xd;
    &quot;text&quot;: &quot;Enter Question&quot;,&#xd;
    &quot;htmlText&quot;: &quot;&lt;p&gt;Enter Question&lt;/p&gt;&quot;,&#xd;
    &quot;sequence&quot;: 1,&#xd;
    &quot;properties&quot;: {&#xd;
      &quot;isMandatory&quot;: true,&#xd;
      &quot;isHidden&quot;: false,&#xd;
      &quot;isSupplierCommentDisable&quot;: true&#xd;
    },&#xd;
    &quot;status&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;settings&quot;: {&#xd;
      &quot;isNoBidAllowed&quot;: false,&#xd;
      &quot;isTotalCostBidding&quot;: false,&#xd;
      &quot;isLineItemBidding&quot;: false,&#xd;
      &quot;isFlexiItemTable&quot;: false,&#xd;
      &quot;isFlexiItemTableMappingDone&quot;: false,&#xd;
      &quot;uploadedExcelId&quot;: null,&#xd;
      &quot;supplierExcelId&quot;: null,&#xd;
      &quot;lotBaseLineCost&quot;: 100000000,&#xd;
      &quot;isItemTableAdminSettingEditable&quot;: null,&#xd;
      &quot;totalCost&quot;: {&#xd;
        &quot;id&quot;: &quot;35748975&quot;,&#xd;
        &quot;displayName&quot;: &quot;Total Cost&quot;,&#xd;
        &quot;value&quot;: null,&#xd;
        &quot;sequence&quot;: 1,&#xd;
        &quot;isHidden&quot;: false,&#xd;
        &quot;refId&quot;: null,&#xd;
        &quot;displayFormulaText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
        &quot;formulaType&quot;: 3,&#xd;
        &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
        &quot;isFormulaStringHidden&quot;: true&#xd;
      },&#xd;
      &quot;pricingInformation&quot;: {&#xd;
        &quot;unitCosts&quot;: {&#xd;
          &quot;unitCost&quot;: [&#xd;
            {&#xd;
              &quot;id&quot;: &quot;35748972&quot;,&#xd;
              &quot;displayName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
              &quot;value&quot;: null,&#xd;
              &quot;sequence&quot;: 12,&#xd;
              &quot;isHidden&quot;: false,&#xd;
              &quot;refId&quot;: &quot;35748973&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        &quot;fixedCosts&quot;: null,&#xd;
        &quot;formulae&quot;: null&#xd;
      },&#xd;
      &quot;partialBid&quot;: null,&#xd;
      &quot;items&quot;: {&#xd;
        &quot;item&quot;: [&#xd;
          {&#xd;
            &quot;meta&quot;: null,&#xd;
            &quot;id&quot;: 43905810,&#xd;
            &quot;number&quot;: &quot;1&quot;,&#xd;
            &quot;title&quot;: &quot;item 1&quot;,&#xd;
            &quot;description&quot;: &quot;item desription in details&quot;,&#xd;
            &quot;baselineCost&quot;: {&#xd;
              &quot;currentPrice&quot;: {&#xd;
                &quot;id&quot;: 35748962,&#xd;
                &quot;refId&quot;: &quot;Current Price&quot;,&#xd;
                &quot;value&quot;: 10000&#xd;
              },&#xd;
              &quot;internalPrice&quot;: {&#xd;
                &quot;id&quot;: 35748964,&#xd;
                &quot;refId&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;value&quot;: null&#xd;
              },&#xd;
              &quot;targetPrice&quot;: {&#xd;
                &quot;id&quot;: 2397397906,&#xd;
                &quot;refId&quot;: &quot;Target Price&quot;,&#xd;
                &quot;value&quot;: null&#xd;
              },&#xd;
              &quot;incumbentSuppliers&quot;: null&#xd;
            },&#xd;
            &quot;sequence&quot;: 1,&#xd;
            &quot;segmentationGroup&quot;: null,&#xd;
            &quot;demandInformation&quot;: {&#xd;
              &quot;priceType&quot;: &quot;BULK&quot;,&#xd;
              &quot;estQty&quot;: {&#xd;
                &quot;id&quot;: 35748968,&#xd;
                &quot;refId&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;value&quot;: 1&#xd;
              },&#xd;
              &quot;qty&quot;: {&#xd;
                &quot;id&quot;: 35748969,&#xd;
                &quot;refId&quot;: &quot;Qty&quot;,&#xd;
                &quot;value&quot;: 200&#xd;
              },&#xd;
              &quot;uom&quot;: &quot;UOM&quot;&#xd;
            },&#xd;
            &quot;itemSpecifications&quot;: null,&#xd;
            &quot;customColumns&quot;: null,&#xd;
            &quot;nonPricingDecisionFactors&quot;: null&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;rows&quot;: [&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905810,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397900,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397901,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397902,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397903,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397904,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397905,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397906,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397907,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397908,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397909,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397910,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397911,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 1,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905811,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397912,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399125,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;2&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399126,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 2&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399127,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399128,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399129,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399130,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399131,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399132,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399133,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399134,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399135,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 2,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905812,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399136,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399137,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;3&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399138,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 3&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399139,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399140,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399141,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399142,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399143,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399144,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399145,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399146,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399147,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 3,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905813,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399148,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399149,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;4&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399150,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 4&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399151,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399152,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399153,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399154,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399155,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399156,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399157,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399158,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399159,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 4,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905814,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399160,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399161,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;5&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399162,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 5&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399163,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399164,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399165,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399166,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399167,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399168,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399169,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399170,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399171,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 5,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905815,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399172,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399173,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;6&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399174,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 6&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399175,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399176,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399177,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399178,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399179,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399180,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399181,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399182,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399183,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 6,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905816,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399184,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399185,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;7&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399186,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 7&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399187,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399188,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399189,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399190,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399191,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399192,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399193,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399194,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399195,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 7,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905817,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399196,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399197,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;8&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399198,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 8&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399199,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399200,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399201,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399202,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399203,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399204,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399205,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399206,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399207,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 8,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905818,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399208,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399209,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;9&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399210,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 9&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399211,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399212,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399213,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399214,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399215,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399216,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399217,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399218,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399219,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 9,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905819,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399220,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399221,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;10&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399222,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 10&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399223,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399224,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399225,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399226,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399227,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399228,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399229,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399230,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399231,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 10,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        }&#xd;
      ],&#xd;
      &quot;columns&quot;: [&#xd;
        {&#xd;
          &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
          &quot;headerId&quot;: 35748956,&#xd;
          &quot;uiSequence&quot;: 0,&#xd;
          &quot;headerElementType&quot;: 1,&#xd;
          &quot;showSupplier&quot;: true,&#xd;
          &quot;childColumns&quot;: [&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
              &quot;headerId&quot;: 35748957,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 13,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
              &quot;headerId&quot;: 35748958,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 1,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
              &quot;headerId&quot;: 35748959,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 2,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
              &quot;headerId&quot;: 35748960,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 3,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;fieldType&quot;: null,&#xd;
          &quot;sectionType&quot;: 1,&#xd;
          &quot;editable&quot;: false,&#xd;
          &quot;hidden&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
          &quot;headerId&quot;: 35748961,&#xd;
          &quot;uiSequence&quot;: 1,&#xd;
          &quot;headerElementType&quot;: 1,&#xd;
          &quot;showSupplier&quot;: true,&#xd;
          &quot;childColumns&quot;: [&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
              &quot;headerId&quot;: 35748962,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: false,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 10,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
              &quot;headerId&quot;: 35748963,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: false,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 11,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
              &quot;headerId&quot;: 35748964,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 12,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
              &quot;headerId&quot;: 35748965,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: false,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 22,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;fieldType&quot;: null,&#xd;
          &quot;sectionType&quot;: 3,&#xd;
          &quot;editable&quot;: false,&#xd;
          &quot;hidden&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
          &quot;headerId&quot;: 35748966,&#xd;
          &quot;uiSequence&quot;: 2,&#xd;
          &quot;headerElementType&quot;: 1,&#xd;
          &quot;showSupplier&quot;: true,&#xd;
          &quot;childColumns&quot;: [&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
              &quot;headerId&quot;: 35748967,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 4,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
              &quot;headerId&quot;: 35748968,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 5,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
              &quot;headerId&quot;: 35748969,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 6,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
              &quot;headerId&quot;: 35748970,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 7,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;fieldType&quot;: null,&#xd;
          &quot;sectionType&quot;: 4,&#xd;
          &quot;editable&quot;: false,&#xd;
          &quot;hidden&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
          &quot;headerId&quot;: 35748971,&#xd;
          &quot;uiSequence&quot;: 3,&#xd;
          &quot;headerElementType&quot;: 1,&#xd;
          &quot;showSupplier&quot;: true,&#xd;
          &quot;childColumns&quot;: [&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
              &quot;headerId&quot;: 35748972,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;headerElementType&quot;: 2,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [&#xd;
                {&#xd;
                  &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                  &quot;headerId&quot;: 35748973,&#xd;
                  &quot;uiSequence&quot;: 12,&#xd;
                  &quot;headerElementType&quot;: 3,&#xd;
                  &quot;showSupplier&quot;: true,&#xd;
                  &quot;childColumns&quot;: [],&#xd;
                  &quot;fieldType&quot;: 16,&#xd;
                  &quot;sectionType&quot;: null,&#xd;
                  &quot;editable&quot;: false,&#xd;
                  &quot;hidden&quot;: false&#xd;
                }&#xd;
              ],&#xd;
              &quot;fieldType&quot;: null,&#xd;
              &quot;sectionType&quot;: 11,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;fieldType&quot;: null,&#xd;
          &quot;sectionType&quot;: 5,&#xd;
          &quot;editable&quot;: false,&#xd;
          &quot;hidden&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
          &quot;headerId&quot;: 35748974,&#xd;
          &quot;uiSequence&quot;: 4,&#xd;
          &quot;headerElementType&quot;: 1,&#xd;
          &quot;showSupplier&quot;: true,&#xd;
          &quot;childColumns&quot;: [&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
              &quot;headerId&quot;: 35748975,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 18,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;fieldType&quot;: null,&#xd;
          &quot;sectionType&quot;: 10,&#xd;
          &quot;editable&quot;: false,&#xd;
          &quot;hidden&quot;: false&#xd;
        }&#xd;
      ],&#xd;
      &quot;totalPages&quot;: 5,&#xd;
      &quot;totalRecords&quot;: 50,&#xd;
      &quot;currentPage&quot;: 1,&#xd;
      &quot;sizeOfPage&quot;: 10,&#xd;
      &quot;noOfCols&quot;: 0,&#xd;
      &quot;isOnlyTCBVisibiltyChanged&quot;: true,&#xd;
      &quot;formulaFields&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 35748962,&#xd;
          &quot;fieldType&quot;: 6,&#xd;
          &quot;name&quot;: &quot;Current Price&quot;,&#xd;
          &quot;showSupplier&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;id&quot;: 35748963,&#xd;
          &quot;fieldType&quot;: 7,&#xd;
          &quot;name&quot;: &quot;Internal Price&quot;,&#xd;
          &quot;showSupplier&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;id&quot;: 35748964,&#xd;
          &quot;fieldType&quot;: 8,&#xd;
          &quot;name&quot;: &quot;Target Price&quot;,&#xd;
          &quot;showSupplier&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;id&quot;: 35748968,&#xd;
          &quot;fieldType&quot;: 5,&#xd;
          &quot;name&quot;: &quot;Est Qty&quot;,&#xd;
          &quot;showSupplier&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;id&quot;: 35748969,&#xd;
          &quot;fieldType&quot;: 3,&#xd;
          &quot;name&quot;: &quot;Qty&quot;,&#xd;
          &quot;showSupplier&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;id&quot;: 35748973,&#xd;
          &quot;fieldType&quot;: 1,&#xd;
          &quot;name&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
          &quot;showSupplier&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  }&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${sectionId}/question</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">460</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.15 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.13 api/a/eform/dynamicforms/getInstance" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;formId&quot;:&quot;${eFormId}&quot;,&quot;instanceId&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/eform/dynamicforms/getInstance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">65</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/isource/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">rxVisitor=15858027152402I8PRJRL1R7OG2O132G830HHECNTNF5I; dtSa=-; REMEMBER_ME_COOKIE=false; SAAS_COMMON_BASE_TOKEN_ID=4d9058ec-ff75-419d-a3cf-928458baf5ef; SERVERID=dew-com-se1.app.inmu.sp.zycus.local_dewdrops-common-services_bk; dtLatC=9; dtCookie=v_4_srv_1_sn_373FE01D43C5EED8AD6FF0D68FBAA3D3_perc_100000_ol_0_mul_1_app-3Aea7c4b59f27d43eb_1; dtPC=1$2906539_96h-vCCLLVAFLFGMMKMJAMUGKJBJBBJLMRGUD-0; rxvt=1585806515805|1585804715805</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1546095592">&quot;data&quot;:{&quot;instance&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.16 api/a/isource/attachments/{attachid}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/${attachid}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-570718727">&quot;data&quot;:{&quot;attachmentId&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.17 api/a/isource/scoreSheets/{eventId}/getAll" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/scoreSheets/${eventId}/getAll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1068747478">&quot;data&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.16 api/a/eform/rules/getRules" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;selectedField&quot;: &quot;&quot;,&#xd;
    &quot;advisorRule&quot;: &quot;NONE&quot;,&#xd;
    &quot;fields&quot;: {&#xd;
      &quot;custom fields.pr value&quot;: {&#xd;
        &quot;name&quot;: &quot;custom fields.pr value&quot;,&#xd;
        &quot;editable&quot;: true,&#xd;
        &quot;mandatory&quot;: false,&#xd;
        &quot;show&quot;: true,&#xd;
        &quot;visible&quot;: true,&#xd;
        &quot;value&quot;: &quot;&quot;,&#xd;
        &quot;searchCriteria&quot;: {&#xd;
          &quot;startIndex&quot;: 0,&#xd;
          &quot;endIndex&quot;: 10,&#xd;
          &quot;logicalOperator&quot;: &quot;OR&quot;,&#xd;
          &quot;searchClause&quot;: &quot;CONTAINS&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;custom fields.function&quot;: {&#xd;
        &quot;name&quot;: &quot;custom fields.function&quot;,&#xd;
        &quot;editable&quot;: true,&#xd;
        &quot;mandatory&quot;: false,&#xd;
        &quot;show&quot;: true,&#xd;
        &quot;visible&quot;: true,&#xd;
        &quot;value&quot;: &quot;&quot;,&#xd;
        &quot;searchCriteria&quot;: {&#xd;
          &quot;startIndex&quot;: 0,&#xd;
          &quot;endIndex&quot;: 10,&#xd;
          &quot;logicalOperator&quot;: &quot;OR&quot;,&#xd;
          &quot;searchClause&quot;: &quot;CONTAINS&quot;&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/eform/rules/getRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="7#. Terms_and_Conditions" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.1 api/a/isource/attachments" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="${path}${filenamemb}" elementType="HTTPFileArg">
                  <stringProp name="File.path">${path}${filenamemb}</stringProp>
                  <stringProp name="File.paramname">file</stringProp>
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="eventId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${eventId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">eventId</stringProp>
                </elementProp>
                <elementProp name="attachmentType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">TNC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">attachmentType</stringProp>
                </elementProp>
                <elementProp name="isPermanentUpload" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">isPermanentUpload</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dewdrops-isource-spvw.zycus.com</stringProp>
                </elementProp>
                <elementProp name="modulename" elementType="Header">
                  <stringProp name="Header.name">modulename</stringProp>
                  <stringProp name="Header.value">einvoice</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="7#. Freeze_Event" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.1 api/a/isource/events/saveDraft" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;basicDetails&quot;:{&quot;eventDesc&quot;:null,&quot;eventId&quot;:${eventId},&quot;eventName&quot;:&quot;${ename}&quot;,&quot;isPublicEvent&quot;:false,&quot;isTebEvent&quot;:false,&quot;isTestEvent&quot;:0},&quot;elmdFieldsRequest&quot;:{&quot;doSave&quot;:&quot;no&quot;,&quot;documentId&quot;:${eventId},&quot;isSelectedCF&quot;:&quot;Cf&quot;,&quot;saveSelectedAction&quot;:&quot;doSave&quot;,&quot;elmdFieldsToUpdate&quot;:[{&quot;customFieldId&quot;:&quot;${customid_1}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_2}&quot;},{&quot;customFieldId&quot;:&quot;${customid_2}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_5}&quot;},{&quot;customFieldId&quot;:&quot;${customid_3}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_8}&quot;}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/false/saveDraft</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1166459812">&quot;data&quot;:{&quot;id&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.2 api/a/isource/events/{eventId}/validateFreezeUnfreeze" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/validateFreezeUnfreeze</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.3 api/a/isource/events/{eventId}/checkBaselinePrice" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/checkBaselinePrice</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.4 api/a/isource/events/{eventId}/updateElmdFields" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;doSave&quot;:&quot;no&quot;,&quot;documentId&quot;:${eventId},&quot;isSelectedCF&quot;:&quot;Cf&quot;,&quot;saveSelectedAction&quot;:&quot;doSave&quot;,&quot;elmdFieldsToUpdate&quot;:[{&quot;customFieldId&quot;:&quot;${customid_1}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_3}&quot;},{&quot;customFieldId&quot;:&quot;${customid_2}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_6}&quot;},{&quot;customFieldId&quot;:&quot;${customid_3}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_9}&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/updateElmdFields</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${Content-Type2}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.5 api/a/isource/events/{eventId}/freezeElmd" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;elmdFieldsToUpdate&quot;:[{&quot;customFieldId&quot;:&quot;${customid_1}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_3}&quot;},{&quot;customFieldId&quot;:&quot;${customid_2}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_6}&quot;},{&quot;customFieldId&quot;:&quot;${customid_3}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_9}&quot;}],&quot;isSelectedCF&quot;:&quot;Cf&quot;,&quot;freezAction&quot;:&quot;chkFreez&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/freezeElmd</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${Content-Type2}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.6 api/a/isource/events/{eventId}/freezeElmd" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;elmdFieldsToUpdate&quot;:[{&quot;customFieldId&quot;:&quot;${customid_1}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_3}&quot;},{&quot;customFieldId&quot;:&quot;${customid_2}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_6}&quot;},{&quot;customFieldId&quot;:&quot;${customid_3}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_9}&quot;}],&quot;isSelectedCF&quot;:&quot;Cf&quot;,&quot;freezAction&quot;:&quot;doFreez&quot;,&quot;doFreez&quot;:&quot;yes&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/freezeElmd</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${Content-Type2}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.7 api/a/isource/events/{eventId}/freeze" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;documentVersion&quot;:null,&quot;freeze&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/freeze</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${Content-Type2}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="8#. Save_Draft" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8.1 api/a/isource/events/saveDraft" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;basicDetails&quot;: {&#xd;
    &quot;eventDesc&quot;: null,&#xd;
    &quot;eventId&quot;: ${eventId},&#xd;
    &quot;eventName&quot;: &quot;${ename}&quot;,&#xd;
    &quot;isPublicEvent&quot;: false,&#xd;
    &quot;isTebEvent&quot;: false,&#xd;
    &quot;isTestEvent&quot;: 0&#xd;
  },&#xd;
  &quot;elmdFieldsRequest&quot;: {&#xd;
    &quot;doSave&quot;: &quot;no&quot;,&#xd;
    &quot;documentId&quot;: ${eventId},&#xd;
    &quot;isSelectedCF&quot;: &quot;Cf&quot;,&#xd;
    &quot;saveSelectedAction&quot;: &quot;doSave&quot;,&#xd;
    &quot;elmdFieldsToUpdate&quot;: [&#xd;
      {&#xd;
        &quot;customFieldId&quot;: &quot;${customid_1}&quot;,&#xd;
        &quot;idOfSelectedValue&quot;: &quot;${selectid_2}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;customFieldId&quot;: &quot;${customid_2}&quot;,&#xd;
        &quot;idOfSelectedValue&quot;: &quot;${selectid_5}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;customFieldId&quot;: &quot;${customid_3}&quot;,&#xd;
        &quot;idOfSelectedValue&quot;: &quot;${selectid_8}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;customFieldId&quot;: &quot;${customid_4}&quot;,&#xd;
        &quot;idOfSelectedValue&quot;: &quot;${selectid_11}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;customFieldId&quot;: &quot;${customid_5}&quot;,&#xd;
        &quot;idOfSelectedValue&quot;: &quot;${selectid_14}&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  &quot;flexiFormRequest&quot;: {&#xd;
    &quot;documentId&quot;: ${eventId},&#xd;
    &quot;documentSubType&quot;: &quot;PUBLISH&quot;,&#xd;
    &quot;flexiFormInstance&quot;: {&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/true/saveDraft</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1166459812">&quot;data&quot;:{&quot;id&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8.2 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="authority" elementType="Header">
                  <stringProp name="Header.name">authority</stringProp>
                  <stringProp name="Header.value">partner-zcsauth.zycus.com</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">_fw_crm_v=26f86bd4-5be8-4ae4-d4be-1876d3e17c99; dtCookie=v_4_srv_1_sn_6C15E6D036DDC0E1E5E43B38B15B1A73_perc_100000_ol_0_mul_1; rxVisitor=16044602140906H9DPK44E0TH0K402A5IAHTQQQ193JND; SRVID=98abdc5d78b0416d; logoutURL=https%3A%2F%2Fzauth-partner.zycus.com%2Fsession%2Flogout; SAAS_COMMON_BASE_TOKEN_ID=6523c5ff-241f-4402-98dc-55a3770064b7; dtSa=-; dtLatC=1; rxvt=1604472927570|1604469207660; dtPC=1$70856418_961h67vUKCPACFSBDKUVIKAGNPBUAUDUDBSRAAL-0e23</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://partner-zcsauth.zycus.com/isource/</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8.3 api/a/isource/events/{eventId}/PUBLISH/flexiFormInformation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/PUBLISH/flexiFormInformation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="583285692">&quot;data&quot;:{&quot;flexiFormEventInstance&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8.4 api/a/isource/users/getUseriSourceDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/users/getUseriSourceDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="909001157">&quot;data&quot;:{&quot;companyId&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8.5 api/a/isource/scoreSheets/{eventId}/getAll" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/scoreSheets/${eventId}/getAll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1068747478">&quot;data&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="9#. Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9.1 api/a/dd/users/logout" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/dd/users/logout</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="L1-iSource-AuctionDefineSettings" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="path" elementType="Argument">
              <stringProp name="Argument.name">path</stringProp>
              <stringProp name="Argument.value">D:\apache-jmeter-5.1\apache-jmeter-5.1\bin\excel\isource\</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Content-Type" elementType="Argument">
              <stringProp name="Argument.name">Content-Type</stringProp>
              <stringProp name="Argument.value">application/x-www-form-urlencoded</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Argument">
              <stringProp name="Argument.name">Accept</stringProp>
              <stringProp name="Argument.value">application/json, text/plain, */*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Content-Type2" elementType="Argument">
              <stringProp name="Argument.name">Content-Type2</stringProp>
              <stringProp name="Argument.value">application/json</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventtype" elementType="Argument">
              <stringProp name="Argument.name">eventtype</stringProp>
              <stringProp name="Argument.value">AUCTION</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="PORT" elementType="Argument">
              <stringProp name="Argument.name">PORT</stringProp>
              <stringProp name="Argument.value">443</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="PROTOCOL" elementType="Argument">
              <stringProp name="Argument.name">PROTOCOL</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pagerec" elementType="Argument">
              <stringProp name="Argument.name">pagerec</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="fileName" elementType="Argument">
              <stringProp name="Argument.name">fileName</stringProp>
              <stringProp name="Argument.value">1310239841_ItemTableTemplate_Section1.0.xlsx</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="filepath" elementType="Argument">
              <stringProp name="Argument.name">filepath</stringProp>
              <stringProp name="Argument.value">D:\apache-jmeter-5.1\apache-jmeter-5.1\bin\excel\isource\</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Origin" elementType="Argument">
              <stringProp name="Argument.name">Origin</stringProp>
              <stringProp name="Argument.value">https://login-rp.zycus.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Origin2" elementType="Argument">
              <stringProp name="Argument.name">Origin2</stringProp>
              <stringProp name="Argument.value">https://dewdrops-isource-partner.zycus.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="BASE_URL_1" elementType="Argument">
              <stringProp name="Argument.name">BASE_URL_1</stringProp>
              <stringProp name="Argument.value">dewdrops-partner.zycus.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="BASE_URL_2" elementType="Argument">
              <stringProp name="Argument.name">BASE_URL_2</stringProp>
              <stringProp name="Argument.value">isource-partner.zycus.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ImportPath" elementType="Argument">
              <stringProp name="Argument.name">ImportPath</stringProp>
              <stringProp name="Argument.value">D:\apache-jmeter-5.1\apache-jmeter-5.1\bin\excel\isource\</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="filenamemb" elementType="Argument">
              <stringProp name="Argument.name">filenamemb</stringProp>
              <stringProp name="Argument.value">100mb.docx</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list"/>
        </AuthManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">${path}Partner_ZCS_Users.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">email,password</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">false</boolProp>
        </CacheManager>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.1# Login_Credential" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.1.1 home/api/u/tms/auth/isLogin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/u/tms/auth/isLogin</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.1.2 home/lmt/translations/DD-Login/en_US.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/lmt/translations/DD-Login/en_US.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.1.3 home/api/u/dd/users/getCSRFToken" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/u/dd/users/getCSRFToken</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2020-01-30T11:22:44.104</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">rxVisitor=1579863345250HU42423E0EHJG0MCCHCE2KHLDCDH51BK; REMEMBER_ME_COOKIE=false; LPVID=YzODgzODJlODdjMjY4MGM2; LPSID-91289041=wBOfdLaLQe-XfgsTTzP0CA; dtPC=1^$492686576_139h-vGNMADUCEABELPIFPKEJMHMEMMOEEBGJX; dtLatC=1; dtSa=true^%^7CC^%^7C-1^%^7CToll^%^20Free^%^20Numbers^%^20^%^28Country^%^20Specific^%^20Numbers^%^29North^%^20America^%^3A^%^20^%^2B1^%^20800-409-3507^%^20^%^5Ep^%^20^%^2B1^%^20866-363-6625Inter...^%^7C-^%^7C1580292698161^%^7C492686576_139^%^7C${PROTOCOL}^%^3A^%^2F^%^2Flogin-sp.zycus.com^%^2Fsso^%^2Flogin^%^7CZycus^%^20^%^3A^%^3A^%^20Login^%^7C1580292695688^%^7C^%^7C; dtCookie=1^$78401E046222CA07B60F7B7B5B5196CF^|ea7c4b59f27d43eb^|1; rxvt=1580294500672^|1580292063694; SERVERID=dew-com-se2.app.inmu.sp.zycus.local_dewdrops-common-services_bk_secondary</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-01-30T11:22:44.107</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1.2. Login_Home" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.1 home/api/u/tms/auth/login" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;emailAddress&quot;:&quot;Loadtest110@zycus.com&quot;,&quot;password&quot;:&quot;yAqIrOiUnAtEbIoUeIsEf$77&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/u/tms/auth/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.1 home/api/u/tms/auth/login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;emailAddress&quot;:&quot;${email}&quot;,&quot;password&quot;:&quot;${password}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/u/tms/auth/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.2 home/api/u/tms/auth/isLogin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/u/tms/auth/isLogin</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1692558840">&quot;requestID</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.3 home/api/a/dd/users/getDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/dd/users/getDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">userid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;userId&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">EMPTYUSERID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">tenantId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;tenantId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">EMPTYtenantId</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1867169789">success</stringProp>
                <stringProp name="927084100">&quot;data&quot;:{&quot;userDetails&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.4 home/lmt/translations/DewDrops/en_US.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/lmt/translations/DewDrops/en_US.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-624070464">:&quot;Locale&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.5 eproc/api/a/eproc/users/doValidateUserDefaults" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">eproc/api/a/eproc/users/doValidateUserDefaults</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1173668551">&quot;data&quot;:{&quot;userDefault&quot;:{&quot;tenantId&quot;:</stringProp>
                <stringProp name="1975190256">&quot;status&quot;:&quot;success&quot;,&quot;statusCode&quot;:200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.6 home/api/a/dd/users/getTokenId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/dd/users/getTokenId</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="37087608">requestID&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.7 home/api/a/tms/themes/menus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/tms/themes/menus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="874262715">menuUniqueName</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.8 home/api/a/tms/users/getRoles" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/tms/users/getRoles</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1197754676">{&quot;roles&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.9 home/api/a/tms/users/preferenceData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/tms/users/preferenceData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-981299857">&quot;data&quot;:{&quot;localeMap&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.10 home/api/a/sht/helpcontents/dewdrops/getKeys" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/sht/helpcontents/dewdrops/getKeys</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.11 home/api/a/tms/companies/getLogo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/tms/companies/getLogo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.12 home/api/a/tms/users/getUserImage" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/tms/users/getUserImage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.13 home/api/a/dd/batch" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:[{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/tms/approvals/getDetailsByEmail&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/tms/themes/menus&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/dd/headers/getColor&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/tms/users/isCompanyAdmin&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/tms/users/getCompany&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/cns/notifications/getDismissPref&quot;}],&quot;sse&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/dd/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">292</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">requestID</stringProp>
              <stringProp name="RegexExtractor.regex">requestID&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">empty requestID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="37087608">requestID&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.12 home/api/a/dd/headers/allQuickLinks" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/dd/headers/allQuickLinks</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="37087608">requestID&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.14 home/api/a/dd/batch/{requestID}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/dd/batch/${requestID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/event-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="360696736">data: {&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.15 home/api/a/dd/searches/getIntents" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;showRecentLinks&quot;:true,&quot;searchTerm&quot;:&quot;&quot;,&quot;isOneViewEnabled&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">home/api/a/dd/searches/getIntents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">65</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2#. Dewdrops_Default_ListingPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.1 isource/api/a/isource/events/updateCertificate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/updateCertificate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.2 api/a/tms/activities/isource/getActivities" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/tms/activities/isource/getActivities</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1680394576">&quot;data&quot;:{&quot;activities&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.3 lmt/translations/iSource/en_US.json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">lmt/translations/iSource/en_US.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.4 api/a/tms/users/getInstance" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/tms/users/getInstance</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.3 api/a/dd/batch" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:[{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/tms/users/isCompanyAdmin&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/tms/users/getCompany&quot;},{&quot;method&quot;:&quot;GET&quot;,&quot;url&quot;:&quot;/a/cns/notifications/getDismissPref&quot;}],&quot;sse&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/dd/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">292</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">batchId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;requestID&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">batchId null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1944697044">&quot;data&quot;:{&quot;message&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.4 api/a/isource/events/getEventType" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/getEventType</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.5 api/a/isource/events/getEventOwner" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/getEventOwner</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.7 api//a/isource/events/allEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api//a/isource/events/allEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.8 api/a/isource/events/adminSettingFlags" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/adminSettingFlags</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-609823016">&quot;data&quot;:{&quot;responseForBusinessUserAllowed&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.9 api/a/isource/users/getUseriSourceDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/users/getUseriSourceDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="909001157">&quot;data&quot;:{&quot;companyId&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.10 api/a/dd/users/events/getListingColumnPreference" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/dd/users/events/getListingColumnPreference</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.11 api/a/isource/views/list" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;perPageRecords&quot;:50,&quot;pageNo&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/views/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">32</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.12 api/a/sht/helpcontents/isource/getKeys" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/sht/helpcontents/isource/getKeys</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.13 api/a/dd/batch/{batchId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/dd/batch/${batchId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/event-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1693300703">data: {&quot;status&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.14 api/a/isource/events/list" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;criteriaGroup&quot;:{&quot;logicalOperator&quot;:&quot;AND&quot;,&quot;criteria&quot;:[{&quot;fieldName&quot;:&quot;owner&quot;,&quot;value&quot;:&quot;ALL&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:0}]},&quot;pageNo&quot;:1,&quot;perPageRecords&quot;:10}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">170</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.22 api/a/isource/views/3174/getDetails" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/views/3174/getDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="3. create event" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1 api/a/isource/events/templates" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;criteriaGroup&quot;:{&quot;logicalOperator&quot;:&quot;AND&quot;,&quot;criteria&quot;:[{&quot;fieldName&quot;:&quot;type&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;value&quot;:&quot;${eventtype}&quot;}]},&quot;sorts&quot;:[{&quot;fieldName&quot;:&quot;CreatedDate&quot;,&quot;direction&quot;:&quot;DESC&quot;}],&quot;pageNo&quot;:1,&quot;perPageRecords&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/templates</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1 api/a/isource/events/templates" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;criteriaGroup&quot;:{&quot;logicalOperator&quot;:&quot;AND&quot;,&quot;criteria&quot;:[{&quot;fieldName&quot;:&quot;type&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;value&quot;:&quot;${eventtype}&quot;}]},&quot;sorts&quot;:[{&quot;fieldName&quot;:&quot;CreatedDate&quot;,&quot;direction&quot;:&quot;DESC&quot;}],&quot;pageNo&quot;:1,&quot;perPageRecords&quot;:12}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/templates</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2 api/a/isource/events" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;createSourceType&quot;:&quot;SCRATCH&quot;,&quot;sourceDocumentId&quot;:&quot;&quot;,&quot;isTemplateEvent&quot;:false,&quot;eventName&quot;:&quot;RFPEventPublish_${__RandomString(5,abcdghijklmnopqrstuvwxyz34567890ef12,)}&quot;,&quot;eventDesc&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;${eventtype}&quot;,&quot;auctionType&quot;:&quot;ENGLISH&quot;,&quot;auctionSubType&quot;:&quot;REVERSE&quot;,&quot;isPublicEvent&quot;:false,&quot;isTestEvent&quot;:false,&quot;isTwoEnvelopeBidding&quot;:false,&quot;opportunityInfo&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">eventId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">EMPTYEVENTID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(eventId, ${eventId})};</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.3 api/a/isource/events/eventid/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1204524299">&quot;data&quot;:{&quot;status&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.4 api/a/tms/users/getRoles" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/tms/users/getRoles</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1877139965">&quot;data&quot;:[{&quot;activities&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.5 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ename</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">event name null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">customid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;customFieldId&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">custom id null</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">selectid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">selectid null</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">eventID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uiId&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">uId empty</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">log.info(vars.get(&quot;email&quot;) + &quot;,&quot; + vars.get(&quot;uId&quot;) + &quot;,&quot; + vars.get(&quot;ename&quot;));</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(eventID, ${eventID})};</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.6 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.7 api/a/isource/events/eventid" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.8 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.9 api/a/isource/events/{eventId}/eventTimerInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/eventTimerInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-832616956">&quot;data&quot;:{&quot;documentSubStatus&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.10 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.11 api/a/isource/events/{eventId}/opportunityDetails" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/opportunityDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.12 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.13 api/a/isource/auctions/{eventId}/bidRecoDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/auctions/${eventId}/bidRecoDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-473517031">&quot;data&quot;:{&quot;documentId&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.14 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.15 api/a/isource/users/getUseriSourceDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/users/getUseriSourceDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="999153941">&quot;data&quot;:{&quot;companyId&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.16 api/a/isource/attachments/getALL" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;attachmentType&quot;:&quot;DOC&quot;,&quot;isPermanentUpload&quot;:&quot;true&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/getALL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="972518731">&quot;data&quot;:{&quot;records&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.17 api/a/isource/attachments/getALL" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;attachmentType&quot;:&quot;TNC&quot;,&quot;isPermanentUpload&quot;:&quot;true&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/getALL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">attachid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?)}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">attachid not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="972518731">&quot;data&quot;:{&quot;records&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.18 api/a/isource/events/{eventid}/sections/getAllSections" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/getAllSections</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1575278328">&quot;data&quot;:{&quot;section&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.19 api/a/lmt/locale/ISOURCE/en_US/getLocale" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/lmt/locale/ISOURCE/en_US/getLocale</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.20 api/a/sht/helpcontents/isource_eventdetails/getAllKeys" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/sht/helpcontents/isource_eventdetails/getAllKeys</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.21 api/a/isource/events/{eventid}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.22 api/a/isource/attachments/{attachid}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/${attahid}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-570718727">&quot;data&quot;:{&quot;attachmentId&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.23 api/a/isource/events/{eventId}/PUBLISH/flexiFormInformation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/PUBLISH/flexiFormInformation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="583285692">&quot;data&quot;:{&quot;flexiFormEventInstance&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">eformId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;eFormDefinitionId&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">eformId EMPTY</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.24 api/a/eform/dynamicforms/getInstance" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;formId&quot;:&quot;${eformId}&quot;,&quot;instanceId&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/eform/dynamicforms/getInstance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">65</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.25 api/a/isource/scoreSheets/{eventId}/getAll" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/scoreSheets/${eventId}/getAll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1068747478">&quot;data&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="3#. Create_Event_button_Click" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1 api/a/isource/events/checkSimIntegration" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/checkSimIntegration</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="3.1#. Create_Event_button_Click" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.1 api/a/isource/events/templates" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;criteriaGroup&quot;:{&quot;logicalOperator&quot;:&quot;AND&quot;,&quot;criteria&quot;:[{&quot;fieldName&quot;:&quot;type&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;value&quot;:&quot;Auction&quot;},{&quot;fieldName&quot;:&quot;auctionType&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;value&quot;:&quot;ENGLISH&quot;}]},&quot;sorts&quot;:[{&quot;fieldName&quot;:&quot;CreatedDate&quot;,&quot;direction&quot;:&quot;DESC&quot;}],&quot;pageNo&quot;:1,&quot;perPageRecords&quot;:12}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/templates</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="3.2#.  Create_Event_finalClick" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.1 api/a/isource/events" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;createSourceType&quot;:&quot;SCRATCH&quot;,&quot;sourceDocumentId&quot;:&quot;&quot;,&quot;isTemplateEvent&quot;:false,&quot;eventName&quot;:&quot;Auction_${__RandomString(5,abef3456789012,)}&quot;,&quot;eventDesc&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;${eventtype}&quot;,&quot;auctionType&quot;:&quot;ENGLISH&quot;,&quot;auctionSubType&quot;:&quot;REVERSE&quot;,&quot;isPublicEvent&quot;:false,&quot;isTestEvent&quot;:false,&quot;isTwoEnvelopeBidding&quot;:false,&quot;opportunityInfo&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">2285</stringProp>
            </ConstantTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">eventId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">EMPTYEVENTID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(eventId, ${eventId})};</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2.3 home/api/a/dd/users/getDetails" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/dd/users/getDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${PROTOCOL}://${BASE_URL_1}/home/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">userid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;userId&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">EMPTYUSERID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">tenantId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;tenantId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">EMPTYtenantId</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1417951688">&quot;data&quot;:{&quot;userDetails&quot;:{&quot;firstName&quot;:</stringProp>
                <stringProp name="-1867169789">success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.2 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1204524299">&quot;data&quot;:{&quot;status&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.3 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="authority" elementType="Header">
                  <stringProp name="Header.name">authority</stringProp>
                  <stringProp name="Header.value">partner-zcsauth.zycus.com</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">_fw_crm_v=26f86bd4-5be8-4ae4-d4be-1876d3e17c99; dtCookie=v_4_srv_1_sn_6C15E6D036DDC0E1E5E43B38B15B1A73_perc_100000_ol_0_mul_1; rxVisitor=16044602140906H9DPK44E0TH0K402A5IAHTQQQ193JND; SRVID=98abdc5d78b0416d; logoutURL=https%3A%2F%2Fzauth-partner.zycus.com%2Fsession%2Flogout; SAAS_COMMON_BASE_TOKEN_ID=6523c5ff-241f-4402-98dc-55a3770064b7; dtSa=-; dtLatC=1; rxvt=1604472927570|1604469207660; dtPC=1$70856418_961h67vUKCPACFSBDKUVIKAGNPBUAUDUDBSRAAL-0e23</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://partner-zcsauth.zycus.com/isource/</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ename</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">event name null</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">customid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;customFieldId&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">custom id null</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">selectid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">selectid null</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">eventID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;uiId&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">uId empty</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(eventID, ${eventID})};</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(eventId, ${eventId})};</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.4 api/a/isource/events/{eventId}/eventTimerInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/eventTimerInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-832616956">&quot;data&quot;:{&quot;documentSubStatus&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.5 api/a/isource/quickSources/entitlementSettings" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/quickSources/entitlementSettings</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1615186397">data&quot;:{&quot;isTnCPresent&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.6 api/a/isource/events/{eventId}/PUBLISH/flexiFormInformation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/PUBLISH/flexiFormInformation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/isource/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">rxVisitor=1579844856226M28GKL2CHTPH3I9JJVS4RQR3IENGEGH1; LPVID=diMmE2MTczOGI4MThjYmFi; REMEMBER_ME_COOKIE=false; LPSID-91289041=t1wKap9gSk-4o6BPUvXLtg; dtSa=-; dtLatC=1; dtPC=1$323490883_724h-vJMJJCLFGJFJOKNDRAOLGJJNLOIFAKKJH; dtCookie=1$89195971A0DE8D6A0A94FA8FEB452BF5|ea7c4b59f27d43eb|1; rxvt=1580725574262|1580722705534; SAAS_COMMON_BASE_TOKEN_ID=ddb909d3-5c8e-493a-973e-567e3a8b4775; SERVERID=dew-com-se1.app.inmu.sp.zycus.local_dewdrops-common-services_bk</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="583285692">&quot;data&quot;:{&quot;flexiFormEventInstance&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">eFormId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;eFormDefinitionId&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">eFormId EMPTY</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.7 api/a/isource/events/{eventId}/opportunityDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/opportunityDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.8 api/a/isource/auctions/{eventId}/bidRecoDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/auctions/${eventId}/bidRecoDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-473517031">&quot;data&quot;:{&quot;documentId&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.9 api/a/isource/events/adminSettingFlags" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/adminSettingFlags</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-609823016">&quot;data&quot;:{&quot;responseForBusinessUserAllowed&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.10 api/a/isource/events/checkSimIntegration" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/checkSimIntegration</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.11 api/a/isource/attachments/getALL" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;attachmentType&quot;:&quot;DOC&quot;,&quot;isPermanentUpload&quot;:&quot;true&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/getALL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">9</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="972518731">&quot;data&quot;:{&quot;records&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.12 api/a/isource/attachments/getALL" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;attachmentType&quot;:&quot;TNC&quot;,&quot;isPermanentUpload&quot;:&quot;true&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/getALL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">4</stringProp>
            </ConstantTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">attachid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?)}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">attachid not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="972518731">&quot;data&quot;:{&quot;records&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.13 api/a/isource/events/{eventId}/sections/questionCountDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/questionCountDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.13 api/a/sht/helpcontents/isource_eventdetails/getAllKeys" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/sht/helpcontents/isource_eventdetails/getAllKeys</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2.13 api/a/isource/attachments/{attachid}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/${attachid}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-570718727">&quot;data&quot;:{&quot;attachmentId&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.15 api/a/eform/dynamicforms/getInstance" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;formId&quot;:&quot;${eFormId}&quot;,&quot;instanceId&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/eform/dynamicforms/getInstance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">65</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/isource/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">rxVisitor=15858027152402I8PRJRL1R7OG2O132G830HHECNTNF5I; dtSa=-; REMEMBER_ME_COOKIE=false; SAAS_COMMON_BASE_TOKEN_ID=4d9058ec-ff75-419d-a3cf-928458baf5ef; SERVERID=dew-com-se1.app.inmu.sp.zycus.local_dewdrops-common-services_bk; dtLatC=9; dtCookie=v_4_srv_1_sn_373FE01D43C5EED8AD6FF0D68FBAA3D3_perc_100000_ol_0_mul_1_app-3Aea7c4b59f27d43eb_1; dtPC=1$2906539_96h-vCCLLVAFLFGMMKMJAMUGKJBJBBJLMRGUD-0; rxvt=1585806515805|1585804715805</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1546095592">&quot;data&quot;:{&quot;instance&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.16 api/a/eform/rules/getRules" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;selectedField&quot;: &quot;&quot;,&#xd;
    &quot;advisorRule&quot;: &quot;NONE&quot;,&#xd;
    &quot;fields&quot;: {&#xd;
      &quot;custom fields.pr value&quot;: {&#xd;
        &quot;name&quot;: &quot;custom fields.pr value&quot;,&#xd;
        &quot;editable&quot;: true,&#xd;
        &quot;mandatory&quot;: false,&#xd;
        &quot;show&quot;: true,&#xd;
        &quot;visible&quot;: true,&#xd;
        &quot;value&quot;: &quot;&quot;,&#xd;
        &quot;searchCriteria&quot;: {&#xd;
          &quot;startIndex&quot;: 0,&#xd;
          &quot;endIndex&quot;: 10,&#xd;
          &quot;logicalOperator&quot;: &quot;OR&quot;,&#xd;
          &quot;searchClause&quot;: &quot;CONTAINS&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;custom fields.function&quot;: {&#xd;
        &quot;name&quot;: &quot;custom fields.function&quot;,&#xd;
        &quot;editable&quot;: true,&#xd;
        &quot;mandatory&quot;: false,&#xd;
        &quot;show&quot;: true,&#xd;
        &quot;visible&quot;: true,&#xd;
        &quot;value&quot;: &quot;&quot;,&#xd;
        &quot;searchCriteria&quot;: {&#xd;
          &quot;startIndex&quot;: 0,&#xd;
          &quot;endIndex&quot;: 10,&#xd;
          &quot;logicalOperator&quot;: &quot;OR&quot;,&#xd;
          &quot;searchClause&quot;: &quot;CONTAINS&quot;&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/eform/rules/getRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="4#. Create_Questionnaire" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.1 api/a/isource/events/false/saveDraft" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;basicDetails&quot;: {&#xd;
    &quot;eventDesc&quot;: &quot;null&quot;,&#xd;
    &quot;eventId&quot;: ${eventId},&#xd;
    &quot;eventName&quot;: &quot;${ename}&quot;,&#xd;
    &quot;isPublicEvent&quot;: false,&#xd;
    &quot;isTebEvent&quot;: false,&#xd;
    &quot;isTestEvent&quot;: 0&#xd;
  },&#xd;
  &quot;elmdFieldsRequest&quot;: {&#xd;
    &quot;doSave&quot;: &quot;no&quot;,&#xd;
    &quot;documentId&quot;: ${eventId},&#xd;
    &quot;isSelectedCF&quot;: &quot;Cf&quot;,&#xd;
    &quot;saveSelectedAction&quot;: &quot;doSave&quot;,&#xd;
    &quot;elmdFieldsToUpdate&quot;: []&#xd;
  },&#xd;
  &quot;flexiFormRequest&quot;: {&#xd;
    &quot;documentId&quot;: ${eventId},&#xd;
    &quot;documentSubType&quot;: &quot;PUBLISH&quot;,&#xd;
    &quot;flexiFormInstance&quot;: {}&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/false/saveDraft</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1166459812">&quot;data&quot;:{&quot;id&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.1 api/a/isource/events/saveDraft" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;basicDetails&quot;:{&quot;eventDesc&quot;:null,&quot;eventId&quot;:${eventId},&quot;eventName&quot;:&quot;${ename}&quot;,&quot;isPublicEvent&quot;:false,&quot;isTebEvent&quot;:false,&quot;isTestEvent&quot;:0},&quot;elmdFieldsRequest&quot;:{&quot;doSave&quot;:&quot;no&quot;,&quot;documentId&quot;:${eventId},&quot;isSelectedCF&quot;:&quot;Cf&quot;,&quot;saveSelectedAction&quot;:&quot;doSave&quot;,&quot;elmdFieldsToUpdate&quot;:[{&quot;customFieldId&quot;:&quot;${customid_1}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_2}&quot;}]},&quot;flexiFormRequest&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/saveDraft</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1166459812">&quot;data&quot;:{&quot;id&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.2 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.3 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1166459812">&quot;data&quot;:{&quot;id&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.4 api/a/isource/events/{eventId}/sections/getAllSections" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/getAllSections</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1575278328">&quot;data&quot;:{&quot;section&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5#. Add_Section_1" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1 api/a/isource/events/{eventId}/sections" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meta&quot;: {&#xd;
    &quot;relation&quot;: &quot;OBJECT&quot;,&#xd;
    &quot;eventId&quot;: ${eventId}&#xd;
  },&#xd;
  &quot;status&quot;: &quot;DEFAULT&quot;,&#xd;
  &quot;name&quot;: &quot;section${__counter(TRUE,)}LotItem5Sections2Keach&quot;,&#xd;
  &quot;type&quot;: &quot;NON_PRICING&quot;,&#xd;
  &quot;sequence&quot;: 1,&#xd;
  &quot;state&quot;: &quot;DEFINE&quot;,&#xd;
  &quot;lineItemBidding&quot;: 0,&#xd;
  &quot;isFromMultiRound&quot;: true,&#xd;
  &quot;isToDeleteFlexiItemTblMapping&quot;: true,&#xd;
  &quot;questions&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">267</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sectionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">sectionId EMPTY</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1 api/a/isource/events/{eventId}/sections" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;meta&quot;:{&quot;relation&quot;:&quot;OBJECT&quot;,&quot;eventId&quot;:${eventId}},&quot;status&quot;:&quot;DEFAULT&quot;,&quot;name&quot;:&quot;section${__counter(TRUE,)}LotItem5Sections2Keach&quot;,&quot;type&quot;:&quot;NON_PRICING&quot;,&quot;sequence&quot;:1,&quot;state&quot;:&quot;DEFINE&quot;,&quot;lineItemBidding&quot;:0,&quot;isFromMultiRound&quot;:true,&quot;isToDeleteFlexiItemTblMapping&quot;:true,&quot;questions&quot;:null,&quot;envelopeType&quot;:&quot;Technical&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">267</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sectionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">sectionId EMPTY</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2 api/a/isource/events/{eventId}/sections/{sectionId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${sectionId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">343</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="694109960">&quot;data&quot;:{&quot;meta&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2 api/a/isource/events/{eventId}/sections/{sectionId}" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;status&quot;: &quot;DEFAULT&quot;,&#xd;
  &quot;name&quot;: &quot;Section&quot;,&#xd;
  &quot;type&quot;: &quot;NON_PRICING&quot;,&#xd;
  &quot;sequence&quot;: 1,&#xd;
  &quot;state&quot;: &quot;POSTED&quot;,&#xd;
  &quot;relation&quot;: &quot;OBJECT&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${sectionId}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">343</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2 api/a/isource/events/{eventId}/sections/{secid}/question" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;meta&quot;:{&quot;relation&quot;:&quot;OBJECT&quot;,&quot;eventId&quot;:${eventId},&quot;sectionId&quot;:${secid}},&quot;text&quot;:&quot;&lt;p&gt;Enter question&lt;/p&gt;&quot;,&quot;sequence&quot;:1,&quot;properties&quot;:{&quot;isMandatory&quot;:false,&quot;isHidden&quot;:false,&quot;isSupplierCommentDisable&quot;:true},&quot;isFromIntegration&quot;:false,&quot;isFromMultiRound&quot;:false,&quot;isResponseToBeDiscard&quot;:false,&quot;status&quot;:&quot;DEFAULT&quot;,&quot;type&quot;:&quot;TEXT&quot;,&quot;settings&quot;:{&quot;maxTextLength&quot;:2000}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${secid}/question</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">343</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5.1# Import_Button" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.1 api/a/isource/events/{eventId}/sections/{sectionId}/question" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meta&quot;: {&#xd;
    &quot;eventId&quot;: ${eventId},&#xd;
    &quot;sectionId&quot;: ${sectionId}&#xd;
  },&#xd;
  &quot;properties&quot;: {&#xd;
    &quot;isHidden&quot;: false,&#xd;
    &quot;isMandatory&quot;: true,&#xd;
    &quot;isSupplierCommentDisable&quot;: true&#xd;
  },&#xd;
  &quot;sequence&quot;: 2,&#xd;
  &quot;settings&quot;: {&#xd;
    &quot;isNoBidAllowed&quot;: false,&#xd;
    &quot;isTotalCostBidding&quot;: false,&#xd;
    &quot;totalCost&quot;: {&#xd;
      &quot;displayName&quot;: &quot;DEFAULT&quot;,&#xd;
      &quot;value&quot;: null,&#xd;
      &quot;sequence&quot;: 1,&#xd;
      &quot;isHidden&quot;: false,&#xd;
      &quot;refId&quot;: null,&#xd;
      &quot;displayFormulaText&quot;: &quot;DEFAULT&quot;,&#xd;
      &quot;formulaString&quot;: &quot;*&quot;,&#xd;
      &quot;isFormulaStringHidden&quot;: true&#xd;
    },&#xd;
    &quot;partialBid&quot;: null,&#xd;
    &quot;isLineItemBidding&quot;: null,&#xd;
    &quot;rows&quot;: [&#xd;
      {}&#xd;
    ],&#xd;
    &quot;pricingInformation&quot;: {&#xd;
      &quot;unitCosts&quot;: {&#xd;
        &quot;unitCost&quot;: [&#xd;
          {&#xd;
            &quot;displayName&quot;: &quot;DEFAULT&quot;,&#xd;
            &quot;sequence&quot;: 12,&#xd;
            &quot;isHidden&quot;: false&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    },&#xd;
    &quot;items&quot;: {&#xd;
      &quot;item&quot;: [&#xd;
        {&#xd;
          &quot;number&quot;: &quot;1&quot;,&#xd;
          &quot;title&quot;: &quot;DEFAULT&quot;,&#xd;
          &quot;description&quot;: &quot;DEFAULT&quot;,&#xd;
          &quot;baselineCost&quot;: {},&#xd;
          &quot;sequence&quot;: 1,&#xd;
          &quot;segmentationGroup&quot;: null,&#xd;
          &quot;demandInformation&quot;: {&#xd;
            &quot;priceType&quot;: &quot;BULK&quot;,&#xd;
            &quot;estQty&quot;: {&#xd;
              &quot;refId&quot;: &quot;Est Qty&quot;,&#xd;
              &quot;value&quot;: 1&#xd;
            },&#xd;
            &quot;qty&quot;: {&#xd;
              &quot;refId&quot;: &quot;Qty&quot;,&#xd;
              &quot;value&quot;: 1&#xd;
            },&#xd;
            &quot;uom&quot;: &quot;UOM&quot;&#xd;
          },&#xd;
          &quot;itemSpecifications&quot;: null,&#xd;
          &quot;customColumns&quot;: null,&#xd;
          &quot;nonPricingDecisionFactors&quot;: null&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;status&quot;: &quot;DEFAULT&quot;,&#xd;
  &quot;text&quot;: &quot;&lt;p&gt;Enter question&lt;/p&gt;&quot;,&#xd;
  &quot;type&quot;: &quot;ITEMLIST&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${sectionId}/question</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">946</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">questionId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">questionId empty</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.2 api/a/isource/events/{questionId}/10/1/lotQuestionDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${questionId}/10/1/lotQuestionDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="694109960">&quot;data&quot;:{&quot;meta&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.3 api/a/isource/events/itemMasterStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/itemMasterStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1204524299">&quot;data&quot;:{&quot;status&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.4 api/a/tms/users/getPreference" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/tms/users/getPreference</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.5 api/a/isource/events/getAllItemMaster" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;perPageRecords&quot;:10,&quot;pageNo&quot;:1,&quot;criteriaGroup&quot;:{&quot;logicalOperator&quot;:&quot;OR&quot;,&quot;criteria&quot;:[{&quot;fieldName&quot;:&quot;elementid&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;value&quot;:&quot;${sectionId}&quot;},{&quot;fieldName&quot;:&quot;eventcurrency&quot;,&quot;operation&quot;:&quot;EQUALS&quot;,&quot;value&quot;:&quot;USD&quot;}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/getAllItemMaster</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">217</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5.2#. Create_Import_Table" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2.1 api/a/isource/attachments/importItemTable" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="eventId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${eventId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">eventId</stringProp>
                </elementProp>
                <elementProp name="buyerRequest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">buyerRequest</stringProp>
                </elementProp>
                <elementProp name="decimalPrecision" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">decimalPrecision</stringProp>
                </elementProp>
                <elementProp name="eventPaused" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">eventPaused</stringProp>
                </elementProp>
                <elementProp name="flexiItemTbl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">flexiItemTbl</stringProp>
                </elementProp>
                <elementProp name="multiRound" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">multiRound</stringProp>
                </elementProp>
                <elementProp name="requestForHiddenResponses" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">requestForHiddenResponses</stringProp>
                </elementProp>
                <elementProp name="supplierPreview" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">supplierPreview</stringProp>
                </elementProp>
                <elementProp name="questionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${questionId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">questionId</stringProp>
                </elementProp>
                <elementProp name="sectionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${sectionId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sectionId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="${filepath}buyer_5_items.xlsx" elementType="HTTPFileArg">
                  <stringProp name="File.path">${filepath}buyer_5_items.xlsx</stringProp>
                  <stringProp name="File.paramname">filename</stringProp>
                  <stringProp name="File.mimetype">application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/importItemTable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">95401</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="module" elementType="Header">
                  <stringProp name="Header.name">module</stringProp>
                  <stringProp name="Header.value">itemtable</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2.2 api/a/isource/events/{questionId}/10/1/lotQuestionDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${questionId}/10/1/lotQuestionDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="694109960">&quot;data&quot;:{&quot;meta&quot;:</stringProp>
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5.3#. Define_Settings" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.3.1 api/a/isource/auctions/{eventId}/{sectionId}/japaneseAuctionSettings" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/auctions/${eventId}/${sectionId}/japaneseAuctionSettings</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">95401</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="module" elementType="Header">
                  <stringProp name="Header.name">module</stringProp>
                  <stringProp name="Header.value">itemtable</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="26815152">&quot;data&quot;:{&quot;decimalPrecision&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.3.2 api/a/isource/auctions/{eventId}/englishSaveDefineSettings" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;sectionId&quot;: ${sectionId},&#xd;
  &quot;startingBid&quot;: 5000,&#xd;
  &quot;minimumBidDecrement&quot;: 2000,&#xd;
  &quot;minimumAboveLowBid&quot;: null,&#xd;
  &quot;minimumBelowLowBid&quot;: null,&#xd;
  &quot;hasBlockBidOver&quot;: false,&#xd;
  &quot;hasBlockBidUnder&quot;: false,&#xd;
  &quot;tiePreventionType&quot;: &quot;CURRENCY&quot;,&#xd;
  &quot;bidDecrementType&quot;: &quot;CURRENCY&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/auctions/${eventId}/englishSaveDefineSettings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">231</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="origin" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://dewdrops-rp.zycus.com</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://dewdrops-rp.zycus.com/isource/</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">231</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5.3#.Add_Section_2" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.3.1 api/a/isource/events/{eventId}/sections" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;meta&quot;: {&#xd;
    &quot;relation&quot;: &quot;OBJECT&quot;,&#xd;
    &quot;eventId&quot;: ${eventId}&#xd;
  },&#xd;
  &quot;status&quot;: &quot;DEFAULT&quot;,&#xd;
  &quot;name&quot;: &quot;Section 2&quot;,&#xd;
  &quot;type&quot;: &quot;NON_PRICING&quot;,&#xd;
  &quot;sequence&quot;: 1,&#xd;
  &quot;state&quot;: &quot;DEFINE&quot;,&#xd;
  &quot;lineItemBidding&quot;: 0,&#xd;
  &quot;isFromMultiRound&quot;: true,&#xd;
  &quot;isToDeleteFlexiItemTblMapping&quot;: true,&#xd;
  &quot;questions&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">267</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">secid_2</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">secid EMPTY</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.3.2 api/a/isource/events/{eventId}/sections/{secid_2}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${secid_2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">343</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="694109960">&quot;data&quot;:{&quot;meta&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.3.2 api/a/isource/events/{eventId}/sections/{secid_2}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;status&quot;: &quot;DEFAULT&quot;,&#xd;
  &quot;name&quot;: &quot;Section 2&quot;,&#xd;
  &quot;type&quot;: &quot;NON_PRICING&quot;,&#xd;
  &quot;sequence&quot;: 1,&#xd;
  &quot;state&quot;: &quot;POSTED&quot;,&#xd;
  &quot;relation&quot;: &quot;OBJECT&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${secid_2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">343</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2 api/a/isource/events/{eventId}/sections/{secid}/question" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;meta&quot;:{&quot;relation&quot;:&quot;OBJECT&quot;,&quot;eventId&quot;:${eventId},&quot;sectionId&quot;:${secid}},&quot;text&quot;:&quot;&lt;p&gt;Enter question&lt;/p&gt;&quot;,&quot;sequence&quot;:1,&quot;properties&quot;:{&quot;isMandatory&quot;:false,&quot;isHidden&quot;:false,&quot;isSupplierCommentDisable&quot;:true},&quot;isFromIntegration&quot;:false,&quot;isFromMultiRound&quot;:false,&quot;isResponseToBeDiscard&quot;:false,&quot;status&quot;:&quot;DEFAULT&quot;,&quot;type&quot;:&quot;TEXT&quot;,&quot;settings&quot;:{&quot;maxTextLength&quot;:2000}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${secid}/question</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">343</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="5.6# Questions_Text" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.6.1 api/a/isource/events/{eventId}/sections/{secid}/question" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;meta&quot;:{&quot;relation&quot;:&quot;OBJECT&quot;,&quot;eventId&quot;:${eventId},&quot;sectionId&quot;:${secid_2}},&quot;text&quot;:&quot;what is your name?&quot;,&quot;htmlText&quot;:&quot;&lt;p&gt;Enter Question&lt;/p&gt;&quot;,&quot;sequence&quot;:${__counter(TRUE,)},&quot;properties&quot;:{&quot;isMandatory&quot;:false,&quot;isHidden&quot;:false,&quot;isSupplierCommentDisable&quot;:false},&quot;isFromIntegration&quot;:false,&quot;isFromMultiRound&quot;:false,&quot;isResponseToBeDiscard&quot;:false,&quot;status&quot;:&quot;DEFAULT&quot;,&quot;type&quot;:&quot;TEXT&quot;,&quot;settings&quot;:{&quot;maxTextLength&quot;:2000}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${secid_2}/question</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="630930583">&quot;status&quot;:&quot;success&quot;,</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="6#. Done_Button" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.1 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">_fw_crm_v=26f86bd4-5be8-4ae4-d4be-1876d3e17c99; SRVID=98abdc5d78b0416d; dtCookie=v_4_srv_1_sn_B2D18CCB803471CE528BDFFC100726AE_perc_100000_ol_0_mul_1; rxVisitor=16032613970987O70TN52BO2JF68AREATRVISF2BNTUAP; SAAS_COMMON_BASE_TOKEN_ID=19586ec7-3711-4528-a36f-a3ca6414118c; dtSa=-; dtLatC=1; rxvt=1603275931448|1603273793019; dtPC=1$74117531_552h56vLHFHNOHGIWVEWBBLKBRCBPBJDOQEQPAT-0e2</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://partner-zcsauth.zycus.com/isource/</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.2 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.3 api/a/isource/events/{eventId}/sections/{secid}/question/{questionId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${sectionId}/question/${questionId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="694109960">&quot;data&quot;:{&quot;meta&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.4 api/a/isource/quickSources/entitlementSettings" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/quickSources/entitlementSettings</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1615186397">data&quot;:{&quot;isTnCPresent&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.5 api/a/isource/events/{eventId}/PUBLISH/flexiFormInformation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/PUBLISH/flexiFormInformation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="583285692">&quot;data&quot;:{&quot;flexiFormEventInstance&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.6 api/a/isource/events/{eventId}/opportunityDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/opportunityDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.7 api/a/isource/auctions/{eventId}/bidRecoDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/auctions/${eventId}/bidRecoDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-473517031">&quot;data&quot;:{&quot;documentId&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.8 api/a/isource/events/adminSettingFlags" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/adminSettingFlags</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-609823016">&quot;data&quot;:{&quot;responseForBusinessUserAllowed&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.9 api/a/isource/events/checkSimIntegration" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/checkSimIntegration</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.10 api/a/isource/users/getUseriSourceDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/users/getUseriSourceDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="909001157">&quot;data&quot;:{&quot;companyId&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.11 api/a/isource/attachments/getALL" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;attachmentType&quot;:&quot;DOC&quot;,&quot;isPermanentUpload&quot;:&quot;true&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/getALL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">9</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="972518731">&quot;data&quot;:{&quot;records&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.12 api/a/isource/attachments/getALL" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;params&quot;:{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;attachmentType&quot;:&quot;TNC&quot;,&quot;isPermanentUpload&quot;:&quot;true&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/getALL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">4</stringProp>
            </ConstantTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">attachid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?)}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">attachid not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="972518731">&quot;data&quot;:{&quot;records&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.13 api/a/isource/events/{eventId}/sections/questionCountDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/questionCountDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="83309647">&quot;data&quot;:{&quot;records&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.14 api/a/isource/events/{eventId}/sections/{sectionId}/question" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;meta&quot;: {&#xd;
      &quot;relation&quot;: &quot;OBJECT&quot;,&#xd;
      &quot;eventId&quot;: ${eventId},&#xd;
      &quot;sectionId&quot;: ${sectionId}&#xd;
    },&#xd;
    &quot;id&quot;: &quot;342131752&quot;,&#xd;
    &quot;type&quot;: &quot;ITEMLIST&quot;,&#xd;
    &quot;text&quot;: &quot;Enter Question&quot;,&#xd;
    &quot;htmlText&quot;: &quot;&lt;p&gt;Enter Question&lt;/p&gt;&quot;,&#xd;
    &quot;sequence&quot;: 1,&#xd;
    &quot;properties&quot;: {&#xd;
      &quot;isMandatory&quot;: true,&#xd;
      &quot;isHidden&quot;: false,&#xd;
      &quot;isSupplierCommentDisable&quot;: true&#xd;
    },&#xd;
    &quot;status&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;settings&quot;: {&#xd;
      &quot;isNoBidAllowed&quot;: false,&#xd;
      &quot;isTotalCostBidding&quot;: false,&#xd;
      &quot;isLineItemBidding&quot;: false,&#xd;
      &quot;isFlexiItemTable&quot;: false,&#xd;
      &quot;isFlexiItemTableMappingDone&quot;: false,&#xd;
      &quot;uploadedExcelId&quot;: null,&#xd;
      &quot;supplierExcelId&quot;: null,&#xd;
      &quot;lotBaseLineCost&quot;: 100000000,&#xd;
      &quot;isItemTableAdminSettingEditable&quot;: null,&#xd;
      &quot;totalCost&quot;: {&#xd;
        &quot;id&quot;: &quot;35748975&quot;,&#xd;
        &quot;displayName&quot;: &quot;Total Cost&quot;,&#xd;
        &quot;value&quot;: null,&#xd;
        &quot;sequence&quot;: 1,&#xd;
        &quot;isHidden&quot;: false,&#xd;
        &quot;refId&quot;: null,&#xd;
        &quot;displayFormulaText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
        &quot;formulaType&quot;: 3,&#xd;
        &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
        &quot;isFormulaStringHidden&quot;: true&#xd;
      },&#xd;
      &quot;pricingInformation&quot;: {&#xd;
        &quot;unitCosts&quot;: {&#xd;
          &quot;unitCost&quot;: [&#xd;
            {&#xd;
              &quot;id&quot;: &quot;35748972&quot;,&#xd;
              &quot;displayName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
              &quot;value&quot;: null,&#xd;
              &quot;sequence&quot;: 12,&#xd;
              &quot;isHidden&quot;: false,&#xd;
              &quot;refId&quot;: &quot;35748973&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        &quot;fixedCosts&quot;: null,&#xd;
        &quot;formulae&quot;: null&#xd;
      },&#xd;
      &quot;partialBid&quot;: null,&#xd;
      &quot;items&quot;: {&#xd;
        &quot;item&quot;: [&#xd;
          {&#xd;
            &quot;meta&quot;: null,&#xd;
            &quot;id&quot;: 43905810,&#xd;
            &quot;number&quot;: &quot;1&quot;,&#xd;
            &quot;title&quot;: &quot;item 1&quot;,&#xd;
            &quot;description&quot;: &quot;item desription in details&quot;,&#xd;
            &quot;baselineCost&quot;: {&#xd;
              &quot;currentPrice&quot;: {&#xd;
                &quot;id&quot;: 35748962,&#xd;
                &quot;refId&quot;: &quot;Current Price&quot;,&#xd;
                &quot;value&quot;: 10000&#xd;
              },&#xd;
              &quot;internalPrice&quot;: {&#xd;
                &quot;id&quot;: 35748964,&#xd;
                &quot;refId&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;value&quot;: null&#xd;
              },&#xd;
              &quot;targetPrice&quot;: {&#xd;
                &quot;id&quot;: 2397397906,&#xd;
                &quot;refId&quot;: &quot;Target Price&quot;,&#xd;
                &quot;value&quot;: null&#xd;
              },&#xd;
              &quot;incumbentSuppliers&quot;: null&#xd;
            },&#xd;
            &quot;sequence&quot;: 1,&#xd;
            &quot;segmentationGroup&quot;: null,&#xd;
            &quot;demandInformation&quot;: {&#xd;
              &quot;priceType&quot;: &quot;BULK&quot;,&#xd;
              &quot;estQty&quot;: {&#xd;
                &quot;id&quot;: 35748968,&#xd;
                &quot;refId&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;value&quot;: 1&#xd;
              },&#xd;
              &quot;qty&quot;: {&#xd;
                &quot;id&quot;: 35748969,&#xd;
                &quot;refId&quot;: &quot;Qty&quot;,&#xd;
                &quot;value&quot;: 200&#xd;
              },&#xd;
              &quot;uom&quot;: &quot;UOM&quot;&#xd;
            },&#xd;
            &quot;itemSpecifications&quot;: null,&#xd;
            &quot;customColumns&quot;: null,&#xd;
            &quot;nonPricingDecisionFactors&quot;: null&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;rows&quot;: [&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905810,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397900,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397901,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397902,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397903,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397904,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397905,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397906,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397907,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397908,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397909,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397910,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397911,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 1,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905811,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397397912,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399125,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;2&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399126,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 2&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399127,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399128,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399129,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399130,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399131,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399132,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399133,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399134,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399135,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 2,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905812,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399136,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399137,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;3&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399138,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 3&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399139,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399140,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399141,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399142,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399143,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399144,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399145,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399146,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399147,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 3,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905813,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399148,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399149,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;4&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399150,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 4&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399151,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399152,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399153,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399154,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399155,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399156,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399157,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399158,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399159,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 4,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905814,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399160,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399161,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;5&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399162,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 5&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399163,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399164,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399165,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399166,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399167,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399168,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399169,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399170,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399171,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 5,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905815,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399172,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399173,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;6&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399174,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 6&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399175,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399176,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399177,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399178,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399179,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399180,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399181,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399182,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399183,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 6,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905816,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399184,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399185,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;7&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399186,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 7&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399187,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399188,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399189,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399190,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399191,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399192,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399193,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399194,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399195,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 7,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905817,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399196,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399197,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;8&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399198,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 8&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399199,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399200,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399201,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399202,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399203,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399204,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399205,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399206,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399207,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 8,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905818,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399208,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399209,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;9&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399210,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 9&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399211,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399212,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399213,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399214,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399215,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399216,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399217,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399218,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399219,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 9,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;meta&quot;: {&#xd;
            &quot;relation&quot;: null,&#xd;
            &quot;eventId&quot;: 222638,&#xd;
            &quot;sectionId&quot;: 342131631,&#xd;
            &quot;questionId&quot;: 342131752&#xd;
          },&#xd;
          &quot;rowItemId&quot;: 43905819,&#xd;
          &quot;lstOfCell&quot;: [&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399220,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
                &quot;headerId&quot;: 35748957,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 13,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 file(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399221,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
                &quot;headerId&quot;: 35748958,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 1,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;10&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399222,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
                &quot;headerId&quot;: 35748959,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 2,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item 10&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399223,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
                &quot;headerId&quot;: 35748960,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 3,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
                &quot;headerId&quot;: 35748956,&#xd;
                &quot;uiSequence&quot;: 0,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;item desription in details&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399224,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
                &quot;headerId&quot;: 35748962,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 10,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 10000,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399225,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
                &quot;headerId&quot;: 35748963,&#xd;
                &quot;uiSequence&quot;: 5,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 11,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399226,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
                &quot;headerId&quot;: 35748964,&#xd;
                &quot;uiSequence&quot;: 6,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 12,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399227,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
                &quot;headerId&quot;: 35748965,&#xd;
                &quot;uiSequence&quot;: 7,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: false,&#xd;
                &quot;fieldType&quot;: 22,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
                &quot;headerId&quot;: 35748961,&#xd;
                &quot;uiSequence&quot;: 1,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;0 Supplier(s)&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399228,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
                &quot;headerId&quot;: 35748967,&#xd;
                &quot;uiSequence&quot;: 8,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 4,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 4,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;1&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399229,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748968,&#xd;
                &quot;uiSequence&quot;: 9,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 5,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 1,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399230,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
                &quot;headerId&quot;: 35748969,&#xd;
                &quot;uiSequence&quot;: 10,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 6,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: 200,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 2,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 2397399231,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
                &quot;headerId&quot;: 35748970,&#xd;
                &quot;uiSequence&quot;: 11,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 7,&#xd;
                &quot;filledBy&quot;: 1,&#xd;
                &quot;dataType&quot;: 1,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
                &quot;headerId&quot;: 35748966,&#xd;
                &quot;uiSequence&quot;: 2,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: &quot;UOM&quot;,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: true,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                &quot;headerId&quot;: 35748973,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 16,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 3,&#xd;
                &quot;formulaType&quot;: 0,&#xd;
                &quot;formulaString&quot;: null,&#xd;
                &quot;formulaDisplayText&quot;: null,&#xd;
                &quot;mandatory&quot;: true,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
                &quot;headerId&quot;: 35748972,&#xd;
                &quot;uiSequence&quot;: 12,&#xd;
                &quot;headerElementType&quot;: 2,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
                &quot;headerId&quot;: 35748971,&#xd;
                &quot;uiSequence&quot;: 3,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;cellId&quot;: 0,&#xd;
              &quot;baseHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748975,&#xd;
                &quot;uiSequence&quot;: 13,&#xd;
                &quot;headerElementType&quot;: 3,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;fieldType&quot;: 18,&#xd;
                &quot;filledBy&quot;: 2,&#xd;
                &quot;dataType&quot;: 9,&#xd;
                &quot;formulaType&quot;: 3,&#xd;
                &quot;formulaString&quot;: &quot;{35748973} * {35748969}&quot;,&#xd;
                &quot;formulaDisplayText&quot;: &quot;{Enter Unit Cost Desc.} * {Qty}&quot;,&#xd;
                &quot;mandatory&quot;: false,&#xd;
                &quot;bidAnalyzable&quot;: false,&#xd;
                &quot;relationExist&quot;: false,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;midHeaderField&quot;: null,&#xd;
              &quot;topHeaderField&quot;: {&#xd;
                &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
                &quot;headerId&quot;: 35748974,&#xd;
                &quot;uiSequence&quot;: 4,&#xd;
                &quot;headerElementType&quot;: 1,&#xd;
                &quot;showSupplier&quot;: true,&#xd;
                &quot;editable&quot;: false,&#xd;
                &quot;hidden&quot;: false&#xd;
              },&#xd;
              &quot;textValue&quot;: null,&#xd;
              &quot;numberValue&quot;: null,&#xd;
              &quot;dateValue&quot;: null,&#xd;
              &quot;valueType&quot;: 1,&#xd;
              &quot;respCellId&quot;: null,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;buyerfield&quot;: true,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;dirty&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;sequence&quot;: 10,&#xd;
          &quot;lineItemIdForIntgr&quot;: null,&#xd;
          &quot;itemErpId&quot;: null,&#xd;
          &quot;mapOfCells&quot;: {},&#xd;
          &quot;respIItemId&quot;: 0,&#xd;
          &quot;responseToBeDiscard&quot;: false,&#xd;
          &quot;fromItemMaster&quot;: false,&#xd;
          &quot;dirty&quot;: false&#xd;
        }&#xd;
      ],&#xd;
      &quot;columns&quot;: [&#xd;
        {&#xd;
          &quot;headerTypeName&quot;: &quot;Item Information&quot;,&#xd;
          &quot;headerId&quot;: 35748956,&#xd;
          &quot;uiSequence&quot;: 0,&#xd;
          &quot;headerElementType&quot;: 1,&#xd;
          &quot;showSupplier&quot;: true,&#xd;
          &quot;childColumns&quot;: [&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Attachment(s)&quot;,&#xd;
              &quot;headerId&quot;: 35748957,&#xd;
              &quot;uiSequence&quot;: 0,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 13,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Item No.&quot;,&#xd;
              &quot;headerId&quot;: 35748958,&#xd;
              &quot;uiSequence&quot;: 1,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 1,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Item Name&quot;,&#xd;
              &quot;headerId&quot;: 35748959,&#xd;
              &quot;uiSequence&quot;: 2,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 2,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Item Description&quot;,&#xd;
              &quot;headerId&quot;: 35748960,&#xd;
              &quot;uiSequence&quot;: 3,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 3,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;fieldType&quot;: null,&#xd;
          &quot;sectionType&quot;: 1,&#xd;
          &quot;editable&quot;: false,&#xd;
          &quot;hidden&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;headerTypeName&quot;: &quot;Baseline Costs&quot;,&#xd;
          &quot;headerId&quot;: 35748961,&#xd;
          &quot;uiSequence&quot;: 1,&#xd;
          &quot;headerElementType&quot;: 1,&#xd;
          &quot;showSupplier&quot;: true,&#xd;
          &quot;childColumns&quot;: [&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Current Price&quot;,&#xd;
              &quot;headerId&quot;: 35748962,&#xd;
              &quot;uiSequence&quot;: 4,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: false,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 10,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Internal Price&quot;,&#xd;
              &quot;headerId&quot;: 35748963,&#xd;
              &quot;uiSequence&quot;: 5,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: false,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 11,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Target Price&quot;,&#xd;
              &quot;headerId&quot;: 35748964,&#xd;
              &quot;uiSequence&quot;: 6,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 12,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Incumbent Supplier&quot;,&#xd;
              &quot;headerId&quot;: 35748965,&#xd;
              &quot;uiSequence&quot;: 7,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: false,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 22,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;fieldType&quot;: null,&#xd;
          &quot;sectionType&quot;: 3,&#xd;
          &quot;editable&quot;: false,&#xd;
          &quot;hidden&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;headerTypeName&quot;: &quot;Demand Information&quot;,&#xd;
          &quot;headerId&quot;: 35748966,&#xd;
          &quot;uiSequence&quot;: 2,&#xd;
          &quot;headerElementType&quot;: 1,&#xd;
          &quot;showSupplier&quot;: true,&#xd;
          &quot;childColumns&quot;: [&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Price Type&quot;,&#xd;
              &quot;headerId&quot;: 35748967,&#xd;
              &quot;uiSequence&quot;: 8,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 4,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Est Qty&quot;,&#xd;
              &quot;headerId&quot;: 35748968,&#xd;
              &quot;uiSequence&quot;: 9,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 5,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Qty&quot;,&#xd;
              &quot;headerId&quot;: 35748969,&#xd;
              &quot;uiSequence&quot;: 10,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 6,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            },&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;UOM&quot;,&#xd;
              &quot;headerId&quot;: 35748970,&#xd;
              &quot;uiSequence&quot;: 11,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 7,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;fieldType&quot;: null,&#xd;
          &quot;sectionType&quot;: 4,&#xd;
          &quot;editable&quot;: false,&#xd;
          &quot;hidden&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;headerTypeName&quot;: &quot;Pricing Information&quot;,&#xd;
          &quot;headerId&quot;: 35748971,&#xd;
          &quot;uiSequence&quot;: 3,&#xd;
          &quot;headerElementType&quot;: 1,&#xd;
          &quot;showSupplier&quot;: true,&#xd;
          &quot;childColumns&quot;: [&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
              &quot;headerId&quot;: 35748972,&#xd;
              &quot;uiSequence&quot;: 12,&#xd;
              &quot;headerElementType&quot;: 2,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [&#xd;
                {&#xd;
                  &quot;headerTypeName&quot;: &quot;Value&quot;,&#xd;
                  &quot;headerId&quot;: 35748973,&#xd;
                  &quot;uiSequence&quot;: 12,&#xd;
                  &quot;headerElementType&quot;: 3,&#xd;
                  &quot;showSupplier&quot;: true,&#xd;
                  &quot;childColumns&quot;: [],&#xd;
                  &quot;fieldType&quot;: 16,&#xd;
                  &quot;sectionType&quot;: null,&#xd;
                  &quot;editable&quot;: false,&#xd;
                  &quot;hidden&quot;: false&#xd;
                }&#xd;
              ],&#xd;
              &quot;fieldType&quot;: null,&#xd;
              &quot;sectionType&quot;: 11,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;fieldType&quot;: null,&#xd;
          &quot;sectionType&quot;: 5,&#xd;
          &quot;editable&quot;: false,&#xd;
          &quot;hidden&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
          &quot;headerId&quot;: 35748974,&#xd;
          &quot;uiSequence&quot;: 4,&#xd;
          &quot;headerElementType&quot;: 1,&#xd;
          &quot;showSupplier&quot;: true,&#xd;
          &quot;childColumns&quot;: [&#xd;
            {&#xd;
              &quot;headerTypeName&quot;: &quot;Total Cost&quot;,&#xd;
              &quot;headerId&quot;: 35748975,&#xd;
              &quot;uiSequence&quot;: 13,&#xd;
              &quot;headerElementType&quot;: 3,&#xd;
              &quot;showSupplier&quot;: true,&#xd;
              &quot;childColumns&quot;: [],&#xd;
              &quot;fieldType&quot;: 18,&#xd;
              &quot;sectionType&quot;: null,&#xd;
              &quot;editable&quot;: false,&#xd;
              &quot;hidden&quot;: false&#xd;
            }&#xd;
          ],&#xd;
          &quot;fieldType&quot;: null,&#xd;
          &quot;sectionType&quot;: 10,&#xd;
          &quot;editable&quot;: false,&#xd;
          &quot;hidden&quot;: false&#xd;
        }&#xd;
      ],&#xd;
      &quot;totalPages&quot;: 5,&#xd;
      &quot;totalRecords&quot;: 50,&#xd;
      &quot;currentPage&quot;: 1,&#xd;
      &quot;sizeOfPage&quot;: 10,&#xd;
      &quot;noOfCols&quot;: 0,&#xd;
      &quot;isOnlyTCBVisibiltyChanged&quot;: true,&#xd;
      &quot;formulaFields&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 35748962,&#xd;
          &quot;fieldType&quot;: 6,&#xd;
          &quot;name&quot;: &quot;Current Price&quot;,&#xd;
          &quot;showSupplier&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;id&quot;: 35748963,&#xd;
          &quot;fieldType&quot;: 7,&#xd;
          &quot;name&quot;: &quot;Internal Price&quot;,&#xd;
          &quot;showSupplier&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;id&quot;: 35748964,&#xd;
          &quot;fieldType&quot;: 8,&#xd;
          &quot;name&quot;: &quot;Target Price&quot;,&#xd;
          &quot;showSupplier&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;id&quot;: 35748968,&#xd;
          &quot;fieldType&quot;: 5,&#xd;
          &quot;name&quot;: &quot;Est Qty&quot;,&#xd;
          &quot;showSupplier&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;id&quot;: 35748969,&#xd;
          &quot;fieldType&quot;: 3,&#xd;
          &quot;name&quot;: &quot;Qty&quot;,&#xd;
          &quot;showSupplier&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;id&quot;: 35748973,&#xd;
          &quot;fieldType&quot;: 1,&#xd;
          &quot;name&quot;: &quot;Enter Unit Cost Desc.&quot;,&#xd;
          &quot;showSupplier&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  }&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/sections/${sectionId}/question</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">460</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.15 api/a/isource/events/{eventId}/getEventStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/getEventStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1485165029">&quot;data&quot;:{&quot;status&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.13 api/a/eform/dynamicforms/getInstance" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;formId&quot;:&quot;${eFormId}&quot;,&quot;instanceId&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/eform/dynamicforms/getInstance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Content-Length" elementType="Header">
                  <stringProp name="Header.name">Content-Length</stringProp>
                  <stringProp name="Header.value">65</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${BASE_URL_1}/isource/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Cookie" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">rxVisitor=15858027152402I8PRJRL1R7OG2O132G830HHECNTNF5I; dtSa=-; REMEMBER_ME_COOKIE=false; SAAS_COMMON_BASE_TOKEN_ID=4d9058ec-ff75-419d-a3cf-928458baf5ef; SERVERID=dew-com-se1.app.inmu.sp.zycus.local_dewdrops-common-services_bk; dtLatC=9; dtCookie=v_4_srv_1_sn_373FE01D43C5EED8AD6FF0D68FBAA3D3_perc_100000_ol_0_mul_1_app-3Aea7c4b59f27d43eb_1; dtPC=1$2906539_96h-vCCLLVAFLFGMMKMJAMUGKJBJBBJLMRGUD-0; rxvt=1585806515805|1585804715805</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1546095592">&quot;data&quot;:{&quot;instance&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.16 api/a/isource/attachments/{attachid}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments/${attachid}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-570718727">&quot;data&quot;:{&quot;attachmentId&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.17 api/a/isource/scoreSheets/{eventId}/getAll" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/scoreSheets/${eventId}/getAll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1068747478">&quot;data&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.16 api/a/eform/rules/getRules" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;selectedField&quot;: &quot;&quot;,&#xd;
    &quot;advisorRule&quot;: &quot;NONE&quot;,&#xd;
    &quot;fields&quot;: {&#xd;
      &quot;custom fields.pr value&quot;: {&#xd;
        &quot;name&quot;: &quot;custom fields.pr value&quot;,&#xd;
        &quot;editable&quot;: true,&#xd;
        &quot;mandatory&quot;: false,&#xd;
        &quot;show&quot;: true,&#xd;
        &quot;visible&quot;: true,&#xd;
        &quot;value&quot;: &quot;&quot;,&#xd;
        &quot;searchCriteria&quot;: {&#xd;
          &quot;startIndex&quot;: 0,&#xd;
          &quot;endIndex&quot;: 10,&#xd;
          &quot;logicalOperator&quot;: &quot;OR&quot;,&#xd;
          &quot;searchClause&quot;: &quot;CONTAINS&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;custom fields.function&quot;: {&#xd;
        &quot;name&quot;: &quot;custom fields.function&quot;,&#xd;
        &quot;editable&quot;: true,&#xd;
        &quot;mandatory&quot;: false,&#xd;
        &quot;show&quot;: true,&#xd;
        &quot;visible&quot;: true,&#xd;
        &quot;value&quot;: &quot;&quot;,&#xd;
        &quot;searchCriteria&quot;: {&#xd;
          &quot;startIndex&quot;: 0,&#xd;
          &quot;endIndex&quot;: 10,&#xd;
          &quot;logicalOperator&quot;: &quot;OR&quot;,&#xd;
          &quot;searchClause&quot;: &quot;CONTAINS&quot;&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/eform/rules/getRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1228566492">&quot;data&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="7#. Terms_and_Conditions" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.1 api/a/isource/attachments" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="eventId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${eventId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">eventId</stringProp>
                </elementProp>
                <elementProp name="attachmentType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">TNC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">attachmentType</stringProp>
                </elementProp>
                <elementProp name="isPermanentUpload" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">isPermanentUpload</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="${path}${filenamemb}" elementType="HTTPFileArg">
                  <stringProp name="File.path">${path}${filenamemb}</stringProp>
                  <stringProp name="File.paramname">file</stringProp>
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/attachments</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dewdrops-isource-spvw.zycus.com</stringProp>
                </elementProp>
                <elementProp name="modulename" elementType="Header">
                  <stringProp name="Header.name">modulename</stringProp>
                  <stringProp name="Header.value">einvoice</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="7#. Freeze_Event" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.1 api/a/isource/events/saveDraft" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;basicDetails&quot;:{&quot;eventDesc&quot;:null,&quot;eventId&quot;:${eventId},&quot;eventName&quot;:&quot;${ename}&quot;,&quot;isPublicEvent&quot;:false,&quot;isTebEvent&quot;:false,&quot;isTestEvent&quot;:0},&quot;elmdFieldsRequest&quot;:{&quot;doSave&quot;:&quot;no&quot;,&quot;documentId&quot;:${eventId},&quot;isSelectedCF&quot;:&quot;Cf&quot;,&quot;saveSelectedAction&quot;:&quot;doSave&quot;,&quot;elmdFieldsToUpdate&quot;:[{&quot;customFieldId&quot;:&quot;${customid_1}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_2}&quot;},{&quot;customFieldId&quot;:&quot;${customid_2}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_5}&quot;},{&quot;customFieldId&quot;:&quot;${customid_3}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_8}&quot;}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/false/saveDraft</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1166459812">&quot;data&quot;:{&quot;id&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.2 api/a/isource/events/{eventId}/validateFreezeUnfreeze" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/validateFreezeUnfreeze</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.3 api/a/isource/events/{eventId}/checkBaselinePrice" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/checkBaselinePrice</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.4 api/a/isource/events/{eventId}/updateElmdFields" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;doSave&quot;:&quot;no&quot;,&quot;documentId&quot;:${eventId},&quot;isSelectedCF&quot;:&quot;Cf&quot;,&quot;saveSelectedAction&quot;:&quot;doSave&quot;,&quot;elmdFieldsToUpdate&quot;:[{&quot;customFieldId&quot;:&quot;${customid_1}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_3}&quot;},{&quot;customFieldId&quot;:&quot;${customid_2}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_6}&quot;},{&quot;customFieldId&quot;:&quot;${customid_3}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_9}&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/updateElmdFields</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${Content-Type2}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.5 api/a/isource/events/{eventId}/freezeElmd" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;elmdFieldsToUpdate&quot;:[{&quot;customFieldId&quot;:&quot;${customid_1}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_3}&quot;},{&quot;customFieldId&quot;:&quot;${customid_2}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_6}&quot;},{&quot;customFieldId&quot;:&quot;${customid_3}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_9}&quot;}],&quot;isSelectedCF&quot;:&quot;Cf&quot;,&quot;freezAction&quot;:&quot;chkFreez&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/freezeElmd</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${Content-Type2}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.6 api/a/isource/events/{eventId}/freezeElmd" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;elmdFieldsToUpdate&quot;:[{&quot;customFieldId&quot;:&quot;${customid_1}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_3}&quot;},{&quot;customFieldId&quot;:&quot;${customid_2}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_6}&quot;},{&quot;customFieldId&quot;:&quot;${customid_3}&quot;,&quot;idOfSelectedValue&quot;:&quot;${selectid_9}&quot;}],&quot;isSelectedCF&quot;:&quot;Cf&quot;,&quot;freezAction&quot;:&quot;doFreez&quot;,&quot;doFreez&quot;:&quot;yes&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/freezeElmd</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${Content-Type2}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.7 api/a/isource/events/{eventId}/freeze" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;documentVersion&quot;:null,&quot;freeze&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/freeze</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${Content-Type2}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="8#. Save_Draft" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8.1 api/a/isource/events/saveDraft" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;basicDetails&quot;: {&#xd;
    &quot;eventDesc&quot;: null,&#xd;
    &quot;eventId&quot;: ${eventId},&#xd;
    &quot;eventName&quot;: &quot;${ename}&quot;,&#xd;
    &quot;isPublicEvent&quot;: false,&#xd;
    &quot;isTebEvent&quot;: false,&#xd;
    &quot;isTestEvent&quot;: 0&#xd;
  },&#xd;
  &quot;elmdFieldsRequest&quot;: {&#xd;
    &quot;doSave&quot;: &quot;no&quot;,&#xd;
    &quot;documentId&quot;: ${eventId},&#xd;
    &quot;isSelectedCF&quot;: &quot;Cf&quot;,&#xd;
    &quot;saveSelectedAction&quot;: &quot;doSave&quot;,&#xd;
    &quot;elmdFieldsToUpdate&quot;: [&#xd;
      {&#xd;
        &quot;customFieldId&quot;: &quot;${customid_1}&quot;,&#xd;
        &quot;idOfSelectedValue&quot;: &quot;${selectid_2}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;customFieldId&quot;: &quot;${customid_2}&quot;,&#xd;
        &quot;idOfSelectedValue&quot;: &quot;${selectid_5}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;customFieldId&quot;: &quot;${customid_3}&quot;,&#xd;
        &quot;idOfSelectedValue&quot;: &quot;${selectid_8}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;customFieldId&quot;: &quot;${customid_4}&quot;,&#xd;
        &quot;idOfSelectedValue&quot;: &quot;${selectid_11}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;customFieldId&quot;: &quot;${customid_5}&quot;,&#xd;
        &quot;idOfSelectedValue&quot;: &quot;${selectid_14}&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  &quot;flexiFormRequest&quot;: {&#xd;
    &quot;documentId&quot;: ${eventId},&#xd;
    &quot;documentSubType&quot;: &quot;PUBLISH&quot;,&#xd;
    &quot;flexiFormInstance&quot;: {&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/true/saveDraft</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${Origin2}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1166459812">&quot;data&quot;:{&quot;id&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8.2 api/a/isource/events/{eventId}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="-1800515746">&quot;data&quot;:{&quot;id&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8.3 api/a/isource/events/{eventId}/PUBLISH/flexiFormInformation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/events/${eventId}/PUBLISH/flexiFormInformation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="583285692">&quot;data&quot;:{&quot;flexiFormEventInstance&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8.4 api/a/isource/users/getUseriSourceDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/users/getUseriSourceDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="909001157">&quot;data&quot;:{&quot;companyId&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8.5 api/a/isource/scoreSheets/{eventId}/getAll" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/isource/scoreSheets/${eventId}/getAll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                <stringProp name="1068747478">&quot;data&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="9#. Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9.1 api/a/dd/users/logout" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">isource/api/a/dd/users/logout</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${Accept}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
